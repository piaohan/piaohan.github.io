<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker命令手册（初稿）</title>
      <link href="2022/08/26/docker/"/>
      <url>2022/08/26/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="1-使用"><a href="#1-使用" class="headerlink" title="1. 使用:"></a>1. 使用:</h1><h2 id="1-1-查看docker版本"><a href="#1-1-查看docker版本" class="headerlink" title="1.1 查看docker版本"></a>1.1 查看docker版本</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-2-镜像操作："><a href="#1-2-镜像操作：" class="headerlink" title="1.2 镜像操作："></a>1.2 镜像操作：</h2><h3 id="1-2-1-查看所有镜像"><a href="#1-2-1-查看所有镜像" class="headerlink" title="1.2.1 查看所有镜像"></a>1.2.1 查看所有镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> imagesREPOSITORY   TAG       IMAGE ID       CREATED       SIZEnginx        latest    2b7d6430f78d   <span class="token number">6</span> days ago    142MBbusybox      latest    7a80323521cc   <span class="token number">4</span> weeks ago   <span class="token number">1</span>.24MB<span class="token comment"># 解释</span>REPOSITORY      <span class="token comment"># 镜像仓库源</span>TAG             <span class="token comment"># 镜像的标签</span>IMAGE ID        <span class="token comment"># 镜像的ID</span>CREATED         <span class="token comment"># 镜像的创建时间</span>SIZE            <span class="token comment"># 镜像的大小</span><span class="token parameter variable">--all</span> , <span class="token parameter variable">-a</span>  Show all images <span class="token punctuation">(</span>default hides intermediate images<span class="token punctuation">)</span> <span class="token comment"># 显示所有</span><span class="token parameter variable">--digests</span>  Show digests<span class="token parameter variable">--filter</span> , <span class="token parameter variable">-f</span>  Filter output based on conditions provided<span class="token parameter variable">--format</span>  Pretty-print images using a Go template--no-trunc  Don’t truncate output<span class="token parameter variable">--quiet</span> , <span class="token parameter variable">-q</span>  Only show numeric IDs <span class="token comment"># 只显示id</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-2-搜索镜像"><a href="#1-2-2-搜索镜像" class="headerlink" title="1.2.2 搜索镜像"></a>1.2.2 搜索镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> search 镜像名<span class="token comment"># 解释</span>Options:  -f, <span class="token parameter variable">--filter</span> filter   Filter output based on conditions provided      <span class="token parameter variable">--format</span> string   Pretty-print search using a Go template      <span class="token parameter variable">--limit</span> int       Max number of search results <span class="token punctuation">(</span>default <span class="token number">25</span><span class="token punctuation">)</span>      --no-trunc        Don't truncate output<span class="token function">docker</span> search mysql <span class="token parameter variable">--filter</span><span class="token operator">=</span>STARS<span class="token operator">=</span><span class="token number">3000</span> <span class="token comment"># 搜索出Stars大于3000的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-3-下载镜像"><a href="#1-2-3-下载镜像" class="headerlink" title="1.2.3 下载镜像"></a>1.2.3 下载镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull 镜像名<span class="token punctuation">[</span>:tag<span class="token punctuation">]</span>  <span class="token comment"># 不写tag，默认是lasest</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-2-4-删除镜像"><a href="#1-2-4-删除镜像" class="headerlink" title="1.2.4 删除镜像"></a>1.2.4 删除镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> image <span class="token function">rm</span> XXXX  <span class="token comment"># XXXX 镜像名字或者ID </span>可选参数：--force, <span class="token parameter variable">-f</span>          <span class="token comment"># 强制删除映像</span>--no-prune           <span class="token comment"># 不要删除未标记的父映像</span><span class="token comment"># 删除一个 可以通过名称 也可以指定id -f表示强制</span><span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> 9cfcce23593a<span class="token comment"># 删除多个 用空格分隔id</span><span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> 镜像id 镜像id 镜像id<span class="token comment"># 删除所有 </span><span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-aq</span><span class="token variable">)</span></span> <span class="token comment"># images -aq就是查所有镜像id，从而递归删除</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-5-镜像导入和导出"><a href="#1-2-5-镜像导入和导出" class="headerlink" title="1.2.5 镜像导入和导出"></a>1.2.5 镜像导入和导出</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#导出</span><span class="token function">docker</span> image save nginx:1.20.0 <span class="token parameter variable">-o</span>  nginx.image <span class="token comment"># 导出nginx 版本为1.20.0 当前目录输出文件名为nginx.image</span><span class="token comment">#导入</span><span class="token function">docker</span> image load <span class="token parameter variable">-i</span>  ./nginx.image  <span class="token comment"># 导入nginx 当前目录的文件名为nginx.image</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-6-镜像编译（dockerfile）"><a href="#1-2-6-镜像编译（dockerfile）" class="headerlink" title="1.2.6 镜像编译（dockerfile）"></a>1.2.6 镜像编译（dockerfile）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编译 build</span><span class="token function">docker</span> image build <span class="token parameter variable">-t</span> hello<span class="token punctuation">[</span>:1.0<span class="token punctuation">]</span> <span class="token builtin class-name">.</span> <span class="token comment"># 将目录.(当前目录)下dockerfile文件进行编译，-t =名字[:版本号(默认latest)]</span><span class="token comment">#例</span><span class="token function">docker</span> images build <span class="token parameter variable">-f</span> dockerfile <span class="token parameter variable">-t</span>  nginx-my <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-7-对已存在镜像变更新的标记"><a href="#1-2-7-对已存在镜像变更新的标记" class="headerlink" title="1.2.7 对已存在镜像变更新的标记"></a>1.2.7 对已存在镜像变更新的标记</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#标记 tag</span><span class="token function">docker</span> image tag nginx piaohan/nginx:1.0 <span class="token comment"># 将镜像nginx克隆为piaohan/nginx版本号1.0的镜像</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2-8-镜像发布（登录）"><a href="#1-2-8-镜像发布（登录）" class="headerlink" title="1.2.8 镜像发布（登录）"></a>1.2.8 镜像发布（登录）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#docker Hub 发布 需要先登录</span><span class="token function">docker</span> login<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2-9-镜像发布（发布）"><a href="#1-2-9-镜像发布（发布）" class="headerlink" title="1.2.9 镜像发布（发布）"></a>1.2.9 镜像发布（发布）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#docker Hub 发布</span><span class="token comment">#需要先登录</span><span class="token comment">#发布 push</span><span class="token function">docker</span> image push  piaohan/nginx:1.0 <span class="token comment"># 将piaohan/nginx:1.0 推送到dockerHub上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-9-镜像拉取"><a href="#1-2-9-镜像拉取" class="headerlink" title="1.2.9 镜像拉取"></a>1.2.9 镜像拉取</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#docker Hub </span><span class="token comment">#需要先登录</span><span class="token comment">#发布 pull</span><span class="token function">docker</span> image pull  piaohan/nginx:1.0 <span class="token comment"># 将piaohan/nginx:1.0 镜像 拉取下来</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-10-镜像分层（创建的历史记录）"><a href="#1-2-10-镜像分层（创建的历史记录）" class="headerlink" title="1.2.10 镜像分层（创建的历史记录）"></a>1.2.10 镜像分层（创建的历史记录）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看本地镜像分层</span><span class="token function">docker</span> image <span class="token function">history</span>  piaohan/nginx <span class="token comment"># piaohan/nginx:1.0 层级情况和大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="1-3-容器操作："><a href="#1-3-容器操作：" class="headerlink" title="1.3 容器操作："></a>1.3 容器操作：</h2><h3 id="1-3-1-查看当前的容器"><a href="#1-3-1-查看当前的容器" class="headerlink" title="1.3.1 查看当前的容器"></a>1.3.1 查看当前的容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token punctuation">[</span>可选参数<span class="token punctuation">]</span>     <span class="token comment"># 当前正在运行的容器</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>            <span class="token comment"># 当前所有的容器（包括停止的）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-3-2-创建并运行容器"><a href="#1-3-2-创建并运行容器" class="headerlink" title="1.3.2 创建并运行容器"></a>1.3.2 创建并运行容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># docker container run nginx</span><span class="token comment"># 启动并进入容器</span><span class="token function">docker</span> run <span class="token parameter variable">-it</span> nginx /bin/bash <span class="token comment"># 等价于：先run启动，然后通过exex /bin/bash 进入容器</span><span class="token function">docker</span> run <span class="token parameter variable">-it</span> nginx <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 容器id /bin/bash<span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-it</span> 容器id /bin/bash <span class="token comment"># 运行后退出自动删除容器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-3-退出容器"><a href="#1-3-3-退出容器" class="headerlink" title="1.3.3 退出容器"></a>1.3.3 退出容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">exit</span>        //停止容器ctr+p+q     //非停止容器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-3-4-删除容器"><a href="#1-3-4-删除容器" class="headerlink" title="1.3.4 删除容器"></a>1.3.4 删除容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token punctuation">[</span>可选参数<span class="token punctuation">]</span> 容器id<span class="token comment"># 删除所有容器 -f 强制的</span><span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span><span class="token variable">)</span></span><span class="token comment"># 删除所有容器</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> -q<span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">docker</span> <span class="token function">rm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-5-启动、重启、停止、杀死容器"><a href="#1-3-5-启动、重启、停止、杀死容器" class="headerlink" title="1.3.5 启动、重启、停止、杀死容器"></a>1.3.5 启动、重启、停止、杀死容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">启动：docker start   容器id重启：docker restart 容器id停止：docker stop    容器id杀死：docker <span class="token function">kill</span>    容器id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-6-查看容器运行的命令"><a href="#1-3-6-查看容器运行的命令" class="headerlink" title="1.3.6 查看容器运行的命令"></a>1.3.6 查看容器运行的命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token operator">&gt;</span> <span class="token function">docker</span> <span class="token function">ps</span> <span class="token comment"># 查看运行的容器</span>CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS     NAMES915ed8e9fed3   nginx     <span class="token string">"/docker-entrypoint.…"</span>   <span class="token number">2</span> minutes ago   Up <span class="token number">2</span> minutes   <span class="token number">80</span>/tcp    eager_bardeenC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token operator">&gt;</span> <span class="token function">docker</span> <span class="token function">top</span> <span class="token number">91</span> <span class="token comment"># 查看容器运行的命令</span><span class="token environment constant">UID</span>                 PID                 <span class="token environment constant">PPID</span>                C                   STIME               TTY                 TIME                CMDroot                <span class="token number">1646</span>                <span class="token number">1626</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: master process nginx <span class="token parameter variable">-g</span> daemon off<span class="token punctuation">;</span>uuidd               <span class="token number">1703</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1704</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1705</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1706</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1707</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1708</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1709</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1710</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1711</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1712</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1713</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?                   00:00:00            nginx: worker processuuidd               <span class="token number">1714</span>                <span class="token number">1646</span>                <span class="token number">0</span>                   <span class="token number">17</span>:06               ?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-7-通过容器提交为镜像"><a href="#1-3-7-通过容器提交为镜像" class="headerlink" title="1.3.7 通过容器提交为镜像"></a>1.3.7 通过容器提交为镜像</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> container commit  <span class="token comment">#容器Id [重新命名（piaohan/nginx）[:版本号]]</span><span class="token comment">#可以将新创建的镜像push到dockerHub上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-3-8-清理已经停止的容器"><a href="#1-3-8-清理已经停止的容器" class="headerlink" title="1.3.8 清理已经停止的容器"></a>1.3.8 清理已经停止的容器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> system prune <span class="token parameter variable">-f</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>扩展</p></blockquote><p>prune 命令用来删除不再使用的 docker 对象。</p><blockquote><p>删除所有未被 tag 标记和未被容器使用的镜像:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image pruneWARNING<span class="token operator">!</span> This will remove all dangling images.Are you sure you want to continue? <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span> y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>删除所有未被容器使用的镜像:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image prune <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除所有停止运行的容器:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> container prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除所有未被挂载的卷:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> volume prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除所有网络:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> network prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除 docker 所有资源:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> system prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-4-dockerfile"><a href="#1-4-dockerfile" class="headerlink" title="1.4 dockerfile"></a>1.4 dockerfile</h2><h3 id="1-4-1-FROM"><a href="#1-4-1-FROM" class="headerlink" title="1.4.1 FROM"></a>1.4.1 FROM</h3><blockquote><p>基础镜像的选择</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image <span class="token function">ls</span>REPOSITORY      TAG             IMAGE ID       CREATED          SIZEbitnami/nginx   <span class="token number">1.18</span>.0          dfe237636dde   <span class="token number">28</span> minutes ago   <span class="token number">89</span>.3MBnginx           <span class="token number">1.21</span>.0-alpine   a6eb2a334a9f   <span class="token number">2</span> days ago       <span class="token number">22</span>.6MBnginx           <span class="token number">1.21</span>.0          d1a364dc548d   <span class="token number">2</span> days ago       133MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假如我们有一个 <code>index.html</code> 文件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello Docker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>准备一个Dockerfile</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM nginx:1.21.0-alpineADD index.html /usr/share/nginx/html/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-4-2-RUN-执行指令"><a href="#1-4-2-RUN-执行指令" class="headerlink" title="1.4.2 RUN(执行指令)"></a>1.4.2 <code>RUN</code>(执行指令)</h3><blockquote><p><code>RUN</code> 主要用于在Image里执行指令，比如安装软件，下载文件等</p></blockquote><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04RUN apt-get updateRUN apt-get install -y wgetRUN wget https://github.com/ipinfo/cli/releases/download/ipinfo-2.0.1/ipinfo_2.0.1_linux_amd64.tar.gzRUN tar zxf ipinfo_2.0.1_linux_amd64.tar.gzRUN mv ipinfo_2.0.1_linux_amd64 /usr/bin/ipinfoRUN rm -rf ipinfo_2.0.1_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image <span class="token function">ls</span>REPOSITORY   TAG       IMAGE ID       CREATED         SIZEipinfo       latest    97bb429363fb   <span class="token number">4</span> minutes ago   138MBubuntu       <span class="token number">21.04</span>     478aa0080b60   <span class="token number">4</span> days ago      <span class="token number">74</span>.1MB$ <span class="token function">docker</span> image <span class="token function">history</span> 97bIMAGE          CREATED         CREATED BY                                      SIZE      COMMENT97bb429363fb   <span class="token number">4</span> minutes ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> ipinfo_2.0.1_linux_amd…   0B        buildkit.dockerfile.v0<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> minutes ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">mv</span> ipinfo_2.0.1_linux_amd64 /…   <span class="token number">9</span>.36MB    buildkit.dockerfile.v0<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> minutes ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">tar</span> zxf ipinfo_2.0.1_linux_am…   <span class="token number">9</span>.36MB    buildkit.dockerfile.v0<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> minutes ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">wget</span> https://github.com/ipinf…   <span class="token number">4</span>.85MB    buildkit.dockerfile.v0<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> minutes ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token comment"># bui…   7.58MB    buildkit.dockerfile.v0</span><span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> minutes ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">apt-get</span> update <span class="token comment"># buildkit        33MB      buildkit.dockerfile.v0</span><span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> days ago      /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop)  CMD ["/bin/bash"]            0B</span><span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> days ago      /bin/sh <span class="token parameter variable">-c</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /run/systemd <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">'do…   7B&lt;missing&gt;      4 days ago      /bin/sh -c [ -z "$(apt-get indextargets)" ]     0B&lt;missing&gt;      4 days ago      /bin/sh -c set -xe   &amp;&amp; echo '</span><span class="token comment">#!/bin/sh' &gt; /…   811B</span><span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> days ago      /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop) ADD file:d6b6ba642344138dc…   74.1MB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>改进版</p></blockquote><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04RUN apt-get update &amp;&amp; \    apt-get install -y wget &amp;&amp; \    wget https://github.com/ipinfo/cli/releases/download/ipinfo-2.0.1/ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \    tar zxf ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \    mv ipinfo_2.0.1_linux_amd64 /usr/bin/ipinfo &amp;&amp; \    rm -rf ipinfo_2.0.1_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image <span class="token function">ls</span>REPOSITORY   TAG       IMAGE ID       CREATED          SIZEipinfo-new   latest    fe551bc26b92   <span class="token number">5</span> seconds ago    124MBipinfo       latest    97bb429363fb   <span class="token number">16</span> minutes ago   138MBubuntu       <span class="token number">21.04</span>     478aa0080b60   <span class="token number">4</span> days ago       <span class="token number">74</span>.1MB$ <span class="token function">docker</span> image <span class="token function">history</span> fe5IMAGE          CREATED          CREATED BY                                      SIZE      COMMENTfe551bc26b92   <span class="token number">16</span> seconds ago   RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span>     apt-get…   <span class="token number">49</span>.9MB    buildkit.dockerfile.v0<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> days ago       /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop)  CMD ["/bin/bash"]            0B</span><span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> days ago       /bin/sh <span class="token parameter variable">-c</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /run/systemd <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">'do…   7B&lt;missing&gt;      4 days ago       /bin/sh -c [ -z "$(apt-get indextargets)" ]     0B&lt;missing&gt;      4 days ago       /bin/sh -c set -xe   &amp;&amp; echo '</span><span class="token comment">#!/bin/sh' &gt; /…   811B</span><span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>      <span class="token number">4</span> days ago       /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop) ADD file:d6b6ba642344138dc…   74.1MB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4-3-文件复制和目录操作-ADD-COPY-WORKDIR"><a href="#1-4-3-文件复制和目录操作-ADD-COPY-WORKDIR" class="headerlink" title="1.4.3 文件复制和目录操作 (ADD,COPY,WORKDIR)"></a>1.4.3 文件复制和目录操作 (<code>ADD</code>,<code>COPY</code>,<code>WORKDIR</code>)</h3><p>往镜像里复制文件有两种方式，<code>COPY</code> 和 <code>ADD</code> , 我们来看一下两者的不同。</p><blockquote><p>复制普通文件</p></blockquote><p><code>COPY</code> 和 <code>ADD</code> 都可以把local的一个文件复制到镜像里，如果目标目录不存在，则会自动创建</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM python:3.9.5-alpine3.13COPY hello.py /app/hello.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>比如把本地的 hello.py 复制到 /app 目录下。 /app这个folder不存在，则会自动创建</p><blockquote><p>复制压缩文件</p></blockquote><p><code>ADD</code> 比 <code>COPY</code> 高级一点的地方就是，如果复制的是一个gzip等压缩文件时，ADD会帮助我们自动去解压缩文件。</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM python:3.9.5-alpine3.13ADD hello.tar.gz /app/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>如何选择</p></blockquote><p>因此在 <code>COPY</code> 和 <code>ADD</code> 指令中选择的时候，可以遵循这样的原则，所有的文件复制均使用 <code>COPY</code> 指令，仅在需要自动解压缩的场合使用 <code>ADD</code>。</p><blockquote><p>目录的切换<br><code>WORKDIR</code> 切换到目录，如果目录不存在会创建该目录</p></blockquote><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM python:3.9.5-alpine3.13WORKDIR /appCOPY hello.py hello.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-4-4-构建参数和环境变量-ARG-vs-ENV"><a href="#1-4-4-构建参数和环境变量-ARG-vs-ENV" class="headerlink" title="1.4.4 构建参数和环境变量 (ARG vs ENV)"></a>1.4.4 构建参数和环境变量 (<code>ARG</code> vs <code>ENV</code>)</h3><p><code>ARG</code> 和 <code>ENV</code> 是经常容易被混淆的两个Dockerfile的语法，都可以用来设置一个“变量”。 但实际上两者有很多的不同。</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04RUN apt-get update &amp;&amp; \    apt-get install -y wget &amp;&amp; \    wget https://github.com/ipinfo/cli/releases/download/ipinfo-2.0.1/ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \    tar zxf ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \    mv ipinfo_2.0.1_linux_amd64 /usr/bin/ipinfo &amp;&amp; \    rm -rf ipinfo_2.0.1_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>ENV</code></p></blockquote><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04ENV VERSION=2.0.1RUN apt-get update &amp;&amp; \    apt-get install -y wget &amp;&amp; \    wget https://github.com/ipinfo/cli/releases/download/ipinfo-${VERSION}/ipinfo_${VERSION}_linux_amd64.tar.gz &amp;&amp; \    tar zxf ipinfo_${VERSION}_linux_amd64.tar.gz &amp;&amp; \    mv ipinfo_${VERSION}_linux_amd64 /usr/bin/ipinfo &amp;&amp; \    rm -rf ipinfo_${VERSION}_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>ARG</code></p></blockquote><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04ARG VERSION=2.0.1RUN apt-get update &amp;&amp; \    apt-get install -y wget &amp;&amp; \    wget https://github.com/ipinfo/cli/releases/download/ipinfo-${VERSION}/ipinfo_${VERSION}_linux_amd64.tar.gz &amp;&amp; \    tar zxf ipinfo_${VERSION}_linux_amd64.tar.gz &amp;&amp; \    mv ipinfo_${VERSION}_linux_amd64 /usr/bin/ipinfo &amp;&amp; \    rm -rf ipinfo_${VERSION}_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>区别</code></p></blockquote><p><code>ARG</code>  可以在镜像build的时候动态修改value, 通过 <code>--build-arg</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image build <span class="token parameter variable">-f</span> .<span class="token punctuation">\</span>Dockerfile-arg <span class="token parameter variable">-t</span> ipinfo-arg-2.0.0 --build-arg <span class="token assign-left variable">VERSION</span><span class="token operator">=</span><span class="token number">2.0</span>.0 <span class="token builtin class-name">.</span>$ <span class="token function">docker</span> image <span class="token function">ls</span>REPOSITORY         TAG       IMAGE ID       CREATED          SIZEipinfo-arg-2.0.0   latest    0d9c964947e2   <span class="token number">6</span> seconds ago    124MB$ <span class="token function">docker</span> container run <span class="token parameter variable">-it</span> ipinfo-arg-2.0.0root@b64285579756:/<span class="token comment">#</span>root@b64285579756:/<span class="token comment"># ipinfo version</span><span class="token number">2.0</span>.0root@b64285579756:/<span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ENV</code> 设置的变量可以在Image中保持，并在容器中的环境变量里</p><h3 id="1-4-5-容器启动命令1-CMD"><a href="#1-4-5-容器启动命令1-CMD" class="headerlink" title="1.4.5 容器启动命令1: CMD"></a>1.4.5 容器启动命令1: <code>CMD</code></h3><blockquote><p><code>CMD</code>可以用来设置容器启动时默认会执行的命令。</p></blockquote><blockquote><p>原则：</p></blockquote><ul><li><p>容器启动时默认执行的命令</p></li><li><p>如果docker container run启动容器时指定了其它命令，则<code>CMD</code>命令会被忽略</p></li><li><p>如果定义了多个<code>CMD</code>，只有最后一个会被执行。</p></li></ul><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04ENV VERSION=2.0.1RUN apt-get update &amp;&amp; \    apt-get install -y wget &amp;&amp; \    wget https://github.com/ipinfo/cli/releases/download/ipinfo-${VERSION}/ipinfo_${VERSION}_linux_amd64.tar.gz &amp;&amp; \    tar zxf ipinfo_${VERSION}_linux_amd64.tar.gz &amp;&amp; \    mv ipinfo_${VERSION}_linux_amd64 /usr/bin/ipinfo &amp;&amp; \    rm -rf ipinfo_${VERSION}_linux_amd64.tar.gzCMD ["ipinfo"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> image build <span class="token parameter variable">-t</span> ipinfo <span class="token builtin class-name">.</span>  <span class="token comment"># 编译当前目录的dockerfile</span><span class="token function">docker</span> run <span class="token parameter variable">-it</span> ipinfo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>上述镜像做容器运行时 会自动运行ipinfo 这个命令 遵循第三原则</p></blockquote><h3 id="1-4-6-容器启动命令2-ENTRYPOINT"><a href="#1-4-6-容器启动命令2-ENTRYPOINT" class="headerlink" title="1.4.6 容器启动命令2: ENTRYPOINT"></a>1.4.6 容器启动命令2: <code>ENTRYPOINT</code></h3><p><code>ENTRYPOINT</code> 也可以设置容器启动时要执行的命令，但是和<code>CMD</code>是有区别的。</p><ul><li><p><code>CMD</code> 设置的命令，可以在docker container run 时传入其它命令，覆盖掉 <code>CMD</code> 的命令，但是 <code>ENTRYPOINT</code> 所设置的命令是一定会被执行的。</p></li><li><p><code>ENTRYPOINT</code> 和 <code>CMD</code> <code>可以联合使用，ENTRYPOINT</code> 设置执行的命令，CMD传递参数</p></li></ul><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04CMD ["echo", "hello docker"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>把上面的<code>Dockerfile build</code>成一个叫 <code>demo-cmd</code> 的镜象</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> image <span class="token function">ls</span>REPOSITORY        TAG       IMAGE ID       CREATED      SIZEdemo-cmd          latest    5bb63bb9b365   <span class="token number">8</span> days ago   <span class="token number">74</span>.1MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM ubuntu:20.04ENTRYPOINT ["echo", "hello docker"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>build</code>成一个叫 <code>demo-entrypoint</code> 的镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> build <span class="token parameter variable">-t</span> demo-entrypoint <span class="token builtin class-name">.</span>$ <span class="token function">docker</span> image <span class="token function">ls</span>REPOSITORY        TAG       IMAGE ID       CREATED      SIZEdemo-entrypoint   latest    b1693a62d67a   <span class="token number">8</span> days ago   <span class="token number">74</span>.1MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>CMD</code>的镜像，如果执行创建容器，不指定运行时的命令，则会默认执行<code>CMD</code>所定义的命令，打印出<code>hello docker</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> container run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> demo-cmdhello <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是如果我们<code>docker container run</code>的时候指定命令，则该命令会覆盖掉<code>CMD</code>的命令，如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> container run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> demo-cmd <span class="token builtin class-name">echo</span> <span class="token string">"hello world"</span>hello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是<code>ENTRYPOINT</code>的容器里E<code>NTRYPOINT</code>所定义的命令则无法覆盖，一定会执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">docker</span> container run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> demo-entrypointhello <span class="token function">docker</span>$ <span class="token function">docker</span> container run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> demo-entrypoint <span class="token builtin class-name">echo</span> <span class="token string">"hello world"</span>hello <span class="token function">docker</span> <span class="token builtin class-name">echo</span> hello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-案例"><a href="#2-案例" class="headerlink" title="2. 案例"></a>2. 案例</h1><h2 id="2-1-下载centos-镜像"><a href="#2-1-下载centos-镜像" class="headerlink" title="2.1 下载centos 镜像"></a>2.1 下载centos 镜像</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-2-新建容器实例并启动"><a href="#2-2-新建容器实例并启动" class="headerlink" title="2.2 新建容器实例并启动"></a>2.2 新建容器实例并启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token punctuation">[</span>可选参数<span class="token punctuation">]</span> image<span class="token comment"># 参数说明</span><span class="token parameter variable">--name</span><span class="token operator">=</span><span class="token string">"Name"</span>   <span class="token comment"># 容器名字，用于区分容器</span><span class="token parameter variable">-d</span> 后台方式运行<span class="token parameter variable">-it</span> 使用交互方式运行，进入容器查看内容<span class="token parameter variable">-p</span> 指定容器的端口 如-p <span class="token number">8080</span>::8080 <span class="token parameter variable">-p</span> ip:主机端口：容器端口 <span class="token parameter variable">-p</span> 主机端口:容器端口（常用） <span class="token parameter variable">-p</span> 容器端口 <span class="token parameter variable">-p</span> 随机指定端口<span class="token comment"># 测试，启动并进入容器</span><span class="token function">docker</span> run <span class="token parameter variable">-it</span> centos /bin/bash <span class="token comment"># 等价于：</span><span class="token function">docker</span> run <span class="token parameter variable">-it</span> centos <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 容器id /bin/bash<span class="token comment"># 查看目录，查看容器内的centos，基本版本，很多命令都是不完善的！</span><span class="token function">ls</span><span class="token comment"># 退出，从容器中退回主机</span><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3-查看运行的容器"><a href="#2-3-查看运行的容器" class="headerlink" title="2.3 查看运行的容器"></a>2.3 查看运行的容器</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看正在运行的容器</span><span class="token function">docker</span> <span class="token function">ps</span><span class="token comment"># 查看所有(包括曾经)运行的容器</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span><span class="token comment"># 显示最近创建的容器，设置显示个数</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> - <span class="token assign-left variable">n</span><span class="token operator">=</span>? <span class="token comment"># 只显示容器的编号（容器id）</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span><span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span>docker <span class="token function">ps</span>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span>docker <span class="token function">ps</span> <span class="token parameter variable">-a</span>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES9939864fa2e6        centos              <span class="token string">"bin/bash"</span>          <span class="token number">4</span> minutes ago       Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">4</span> minutes ago                       unruffled_knuth5f42e9930435        centos              <span class="token string">"/bin/bash"</span>         <span class="token number">8</span> minutes ago       Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">4</span> minutes ago                       lucid_cannona89ddb393d3d        bf756fb1ae65        <span class="token string">"/hello"</span>            <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                        gracious_bhabha<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-n</span><span class="token operator">=</span><span class="token number">2</span>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES9939864fa2e6        centos              <span class="token string">"bin/bash"</span>          <span class="token number">6</span> minutes ago       Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">6</span> minutes ago                       unruffled_knuth5f42e9930435        centos              <span class="token string">"/bin/bash"</span>         <span class="token number">10</span> minutes ago      Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">7</span> minutes ago <span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span>9939864fa2e65f42e9930435a89ddb393d3d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-4-退出容器"><a href="#2-4-退出容器" class="headerlink" title="2.4 退出容器"></a>2.4 退出容器</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 容器停止退出</span><span class="token builtin class-name">exit</span><span class="token comment"># 容器不停止退出 注意必须在英文输入法下，中文输入法不行</span>Ctrl + P + Q<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> run <span class="token parameter variable">-it</span> centos /bin/bash<span class="token punctuation">[</span>root@bfcea13c40cd /<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">ps</span> <span class="token comment">##注意这里会自动给个命令，删掉</span>CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS               NAMESbfcea13c40cd        centos              <span class="token string">"/bin/bash"</span>         About a minute ago   Up About a minute                       stoic_wilsonedbd9366d959        centos              <span class="token string">"/bin/bash"</span>         <span class="token number">7</span> minutes ago        Up <span class="token number">7</span> minutes                            affectionate_bartik<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> edbd9366d959 /bin/bash <span class="token comment">## 再次进入</span><span class="token punctuation">[</span>root@edbd9366d959 /<span class="token punctuation">]</span><span class="token comment"># exit ##停止并推出</span><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5-删除容器"><a href="#2-5-删除容器" class="headerlink" title="2.5 删除容器"></a>2.5 删除容器</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除指定容器 不能删除正在运行的容器，如果强制删除 rm -f</span><span class="token function">docker</span> <span class="token function">rm</span> 容器id<span class="token comment"># 删除所有容器</span><span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span><span class="token variable">)</span></span><span class="token comment"># 删除所有容器</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> -q<span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">docker</span> <span class="token function">rm</span><span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMESbfcea13c40cd        centos              <span class="token string">"/bin/bash"</span>         <span class="token number">29</span> minutes ago      Up <span class="token number">29</span> minutes                                   stoic_wilsonedbd9366d959        centos              <span class="token string">"/bin/bash"</span>         <span class="token number">35</span> minutes ago      Up <span class="token number">35</span> minutes                                   affectionate_bartik9939864fa2e6        centos              <span class="token string">"bin/bash"</span>          <span class="token number">48</span> minutes ago      Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">48</span> minutes ago                       unruffled_knuth5f42e9930435        centos              <span class="token string">"/bin/bash"</span>         <span class="token number">52</span> minutes ago      Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">49</span> minutes ago                       lucid_cannona89ddb393d3d        bf756fb1ae65        <span class="token string">"/hello"</span>            <span class="token number">20</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">20</span> hours ago                         gracious_bhabha<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">rm</span> 5f42e99304355f42e9930435<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">rm</span> edbd9366d959      <span class="token comment"># 注意正在运行的容器不能删除</span>Error response from daemon: You cannot remove a running container edbd9366d9596c744dd449119269b04de2f2a494e7fc471f6396bcefd94c33fe. Stop the container before attempting removal or force remove<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span> <span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-aq</span> <span class="token comment"># 所有容器id</span>bfcea13c40cdedbd9366d9599939864fa2e6a89ddb393d3d<span class="token punctuation">[</span>root@192 ~<span class="token punctuation">]</span><span class="token comment"># docker rm -f $(docker ps -aq) # 全部删除</span>bfcea13c40cdedbd9366d9599939864fa2e6a89ddb393d3d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-6-启动和停止-杀死容器的操作"><a href="#2-6-启动和停止-杀死容器的操作" class="headerlink" title="2.6 启动和停止/杀死容器的操作"></a>2.6 启动和停止/杀死容器的操作</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> start<span class="token function">docker</span> restart<span class="token function">docker</span> stop<span class="token function">docker</span> <span class="token function">kill</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>krpano 初接触</title>
      <link href="2022/06/04/krpano/"/>
      <url>2022/06/04/krpano/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h1><h1 id="2-结构"><a href="#2-结构" class="headerlink" title="2.结构"></a>2.结构</h1><h1 id="3-XMl"><a href="#3-XMl" class="headerlink" title="3.XMl"></a>3.XMl</h1><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>krpano</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.19<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>飘寒工作室<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> //全景标题 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skin/vtourskin.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span> //模版样式 <span class="token comment">&lt;!-- customize skin settings: maps, gyro, webvr, thumbnails, tooltips, layout, design, ... --&gt;</span>    //设置一系列皮肤属性设置 &lt;skin_settings                    maps="true"                       //是否使用必应地图或谷歌地图                 maps_type="google"                //选择使用谷歌地图或必应地图                maps_bing_api_key=""              //应地图所需的API密钥                maps_google_api_key=""            //谷歌地图所需的API密钥                maps_zoombuttons="false"          //是否在地图上显示缩放按钮                gyro="true"                       //是否使用陀螺仪                webvr="true"                      //是否启用VR                webvr_gyro_keeplookingdirection="false"  //进入陀螺仪或VR时是否保持观看方向                webvr_prev_next_hotspots="true"          //在VR下是否启用导航到前后场景的链接热点                littleplanetintro="false"         //是否使用小行星开场                  title="true"                      //是否左下角显示title                thumbs="true"                                                                                //是否使用缩略图，如不使用，则没有缩略图一栏                thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"         //缩略图宽度、高度、间距以及缩略图裁切范围                thumbs_opened="false"                                                                        //是否在启动时弹出缩略图一栏                thumbs_text="false"                                                                          //否在缩略图上显示名字                thumbs_dragging="true"                                                                       //是否允许鼠标拖拽缩略图区域                thumbs_onhoverscrolling="false"                                                              //是否允许鼠标悬停缩略图自动滚动                thumbs_scrollbuttons="false"                                                                 //是否显示缩略图滚动按钮                thumbs_scrollindicator="false"                                                               //是否显示缩略图滚动条                thumbs_loop="false"                                                                          //滚动按钮是否使用缩略图循环                tooltips_buttons="false"                         //鼠标在按钮悬停时是否弹出文字提示                tooltips_thumbs="false"                          //鼠标在缩略图悬停时是否弹出文字提示                tooltips_hotspots="false"                        //鼠标在热点上悬停时是否弹出文字提示                tooltips_mapspots="false"                        //鼠标在地图热点悬停时是否弹出文字提示                deeplinking="false"                     //是否使用深度链接获取功能，可使得当前页面路径获取场景及视角信息                loadscene_flags="MERGE"                                          //缩略图切换场景时的变量                loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"        //缩略图切换场景时的融合                loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"        //缩略图切换到上一个场景时的融合                loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"        //缩略图切换到下一个场景时的融合                loadingtext="loading..."                        //在全景图载入中时显示的文字                layout_width="100%"                             //导航条容器相对屏幕宽度的百分比                layout_maxwidth="814"                                //导航条容器的最大宽度像素                controlbar_width="-24"                               //导航条背景的宽度像素                controlbar_height="40"                               //导航条背景的高度像素                controlbar_offset="20"                               //导航条背景与屏幕底部的距离                controlbar_offset_closed="-40"                       //导航条隐藏状态时与屏幕底部的距离                controlbar_overlap.no-fractionalscaling="10"         //在不支持分级缩放页面和设置像素比的设备的导航条重叠的像素                controlbar_overlap.fractionalscaling="0"             //支持分级缩放页面和设置像素比的设备的导航条重叠的像素                design_skin_images="vtourskin.png"                           //皮肤所用的源图片                design_bgcolor="0x2D3E50"                                    //皮肤的背景颜色                design_bgalpha="0.8"                                         //皮肤的透明度                design_bgborder="0"                                          //皮肤的边框                design_bgroundedge="1"                                       //皮肤边框圆角设置                design_bgshadow="0 4 10 0x000000 0.3"                        //皮肤的背景阴影                design_thumbborder_bgborder="3 0xFFFFFF 1.0"                 //皮肤的缩略图边框                design_thumbborder_padding="2"                               //皮肤缩略图边框间距                design_thumbborder_bgroundedge="0"                           //皮肤缩略图边框的圆角                design_text_css="color:#FFFFFF; font-family:Arial;"          //皮肤文字样式                design_text_shadow="1"                                       //皮肤的文字阴影                /&gt; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>images</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tx.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!--     For an alternative skin design either change the &lt;skin_settings&gt; values      from above or optionally include one of the predefined designs from below. --&gt;</span> <span class="token comment">&lt;!-- &lt;include url="skin/vtourskin_design_flat_light.xml"  /&gt; --&gt;</span> <span class="token comment">&lt;!-- &lt;include url="skin/vtourskin_design_glass.xml"       /&gt; --&gt;</span> <span class="token comment">&lt;!-- &lt;include url="skin/vtourskin_design_ultra_light.xml" /&gt; --&gt;</span> <span class="token comment">&lt;!-- &lt;include url="skin/vtourskin_design_117.xml"         /&gt; --&gt;</span> <span class="token comment">&lt;!-- &lt;include url="skin/vtourskin_design_117round.xml"    /&gt; --&gt;</span> <span class="token comment">&lt;!-- &lt;include url="skin/vtourskin_design_black.xml"       /&gt; --&gt;</span> <span class="token comment">&lt;!-- startup action - load the first scene --&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startup<span class="token punctuation">"</span></span> <span class="token attr-name">autorun</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onstart<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); );  loadscene(get(startscene), null, MERGE);  if(startactions !== null, startactions() ); <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>action</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scene</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scene_qj1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qj1<span class="token punctuation">"</span></span> <span class="token attr-name">onstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">thumburl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panos/qj1.tiles/thumb.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">lat</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1.#IND0000<span class="token punctuation">"</span></span> <span class="token attr-name">lng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1.#IND0000<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        //全景浏览者观看时的视角，比如初始视角，缩放范围，视域范围等等  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">hlookat</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.0<span class="token punctuation">"</span></span> <span class="token attr-name">vlookat</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.0<span class="token punctuation">"</span></span> <span class="token attr-name">fovtype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MFOV<span class="token punctuation">"</span></span> <span class="token attr-name">fov</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">maxpixelzoom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2.0<span class="token punctuation">"</span></span> <span class="token attr-name">fovmin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">fovmax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>140<span class="token punctuation">"</span></span> <span class="token attr-name">limitview</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        //浏览全景时的略缩图  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>preview</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panos/qj1.tiles/preview.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        //全景漫游里使用的图片资源  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CUBE<span class="token punctuation">"</span></span> <span class="token attr-name">prealign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0|0.0|0<span class="token punctuation">"</span></span> <span class="token attr-name">multires</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">tilesize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>512<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">tiledimagewidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2560<span class="token punctuation">"</span></span> <span class="token attr-name">tiledimageheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2560<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cube</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panos/qj1.tiles/%s/l3/%v/l3_%s_%v_%h.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">tiledimagewidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1280<span class="token punctuation">"</span></span> <span class="token attr-name">tiledimageheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1280<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cube</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panos/qj1.tiles/%s/l2/%v/l2_%s_%v_%h.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">tiledimagewidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>640<span class="token punctuation">"</span></span> <span class="token attr-name">tiledimageheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>640<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cube</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panos/qj1.tiles/%s/l1/%v/l1_%s_%v_%h.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scene</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>krpano</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> krpano </category>
          
          <category> 全景 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> krpano </tag>
            
            <tag> 全景 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go的注意点</title>
      <link href="2022/03/19/go-biji/"/>
      <url>2022/03/19/go-biji/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> go </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法读书笔记（一）</title>
      <link href="2021/12/10/suanfa-1/"/>
      <url>2021/12/10/suanfa-1/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是数据结构？什么是算法？"><a href="#什么是数据结构？什么是算法？" class="headerlink" title="什么是数据结构？什么是算法？"></a>什么是数据结构？什么是算法？</h1><h2 id="1-入门："><a href="#1-入门：" class="headerlink" title="1. 入门："></a>1. 入门：</h2><h3 id="从广义上讲"><a href="#从广义上讲" class="headerlink" title="从广义上讲:"></a>从广义上讲:</h3><ul><li>数据结构:<code>指一组数据的存储结构</code></li></ul><blockquote><p>图书馆储藏书籍你肯定见过吧？为了方便查找，图书管理员一般会将书籍分门别类进行“存储”。按照一定规律编号，就是书籍这种“数据”的存储结构。</p></blockquote><ul><li>算法:<code>操作数据的一组方法</code></li></ul><blockquote><p>那我们如何来查找一本书呢？有很多种办法，你当然可以一本一本地找，也可以先根据书籍类别的编号，是人文，还是科学、计算机，来定位书架，然后再依次查找。笼统地说，这些查找方法都是算法。</p></blockquote><h3 id="从狭义上讲"><a href="#从狭义上讲" class="headerlink" title="从狭义上讲:"></a>从狭义上讲:</h3><blockquote><p>指某些著名的数据结构和算法，比如队列、栈、堆、二分查找、动态规划等。这些都是前人智慧的结晶，我们可以直接拿来用。我们要讲的这些经典数据结构和算法，都是前人从很多实际操作场景中抽象出来的，经过非常多的求证和检验，可以高效地帮助我们解决很多实际的开发问题。</p></blockquote><hr><h3 id="20-个最常用的、最基础数据结构与算法"><a href="#20-个最常用的、最基础数据结构与算法" class="headerlink" title="20 个最常用的、最基础数据结构与算法:"></a>20 个最常用的、最基础数据结构与算法:</h3><ul><li>10 个数据结构：</li></ul><blockquote><p><code>数组</code>、<code>链表</code>、<code>栈</code>、<code>队列</code>、<code>散列表</code>、<code>二叉树</code>、<code>堆</code>、<code>跳表</code>、<code>图</code>、<code>Trie 树</code>；</p></blockquote><ul><li>10 个算法：</li></ul><blockquote><p><code>递归</code>、<code>排序</code>、<code>二分查找</code>、<code>搜索</code>、<code>哈希算法</code>、<code>贪心算法</code>、<code>分治算法</code>、<code>回溯算法</code>、<code>动态规划</code>、<code>字符串匹配算法</code>。</p></blockquote><hr><h3 id="如何来衡量你编写的算法代码的执行效率呢"><a href="#如何来衡量你编写的算法代码的执行效率呢" class="headerlink" title="如何来衡量你编写的算法代码的执行效率呢?"></a>如何来衡量你编写的算法代码的执行效率呢?</h3><blockquote><p>数据结构和算法本身解决的是 <code>“快”</code> 和 <code>“省”</code> 的问题，即如何让代码运行得更</p></blockquote><p>快，如何让代码更省存储空间。</p><blockquote><p>所以，执行效率是算法一个非常重要的考量指标。那如何来</p></blockquote><p>衡量你编写的算法代码的执行效率呢? 这里就要用到我们今天要讲的内容: <code>时间、</code>  <code>空间复杂度分析</code> 。</p><h3 id="为什么需要复杂度分析"><a href="#为什么需要复杂度分析" class="headerlink" title="为什么需要复杂度分析?"></a>为什么需要复杂度分析?</h3><h4 id="1-事后统计法："><a href="#1-事后统计法：" class="headerlink" title="1. 事后统计法："></a>1. 事后统计法：</h4><blockquote><p>把代码跑一遍，通过统计、监控，就能得到算法执行的时间和占用的内存大小</p></blockquote><p>   <strong>缺点</strong>：</p><ul><li><p><code>1.  测试结果非常依赖测试环境</code></p><blockquote><p>测试环境中硬件的不同会对测试结果有很大的影响。比如，我们拿同样一段代码，分别用 Intel Core i9 处理器和 Intel Core i3 处理器来运行，不用说，i9 处理器要比 i3 处理器执 行的速度快很多。还有，比如原本在这台机器上 a 代码执行的速度比 b 代码要快，等我们 换到另一台机器上时，可能会有截然相反的结果</p></blockquote></li><li><p><code> 2. 测试结果受数据规模的影响很大</code></p><blockquote><p>对同一个排序算法，待排序数据的有序度不一样，排序的执行时间就会有很大的差别。极端情况下，如果数据已经是有序的，那排序算法不需要做任何操作，执行时间就会非常短。除此之外，如果测试数据规模太小，测试结果可能无法真实地反应算法的性能。比如，对于小规模的数据排序，插入排序可能反倒会比快速排序要快!</p></blockquote><p><strong>因此</strong>：</p><p><code>我们需要一个不用具体的测试数据来测试，就可以粗略地估计算法的执行效率的方法</code></p></li></ul><h5 id="2-大-O-复杂度表示法"><a href="#2-大-O-复杂度表示法" class="headerlink" title="2. 大 O 复杂度表示法:"></a>2. 大 O 复杂度表示法:</h5><p><code>算法代码执行的时间</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
          <category> 算法 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel之Redis模块操作</title>
      <link href="2020/12/09/laravel-zhi-redis-mo-kuai-cao-zuo-quan/"/>
      <url>2020/12/09/laravel-zhi-redis-mo-kuai-cao-zuo-quan/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介:"></a>1.简介:</h1><hr><p>Redis模块负责与Redis数据库交互，并提供Redis的相关API支持;</p><p>Redis模块提供redis与redis.connection这两个服务;</p><p>redis.connection服务提供redis连接对象;</p><p>redis服务提供Illuminate\Redis\RedisManager对象，负责与Redis打交道的这部分管理工作;</p><h1 id="2-配置项"><a href="#2-配置项" class="headerlink" title="2.配置项:"></a>2.配置项:</h1><p>以下是笔者的示例;</p><blockquote><p>default是默认的Redis连接对象名，值是连接对象的参数; <br> app(‘redis.connection’)返回的就是该默认连接对象;</p></blockquote><blockquote><p>mydefine是笔者定义的Redis连接对象名;<br>通过执行app(‘redis’)-&gt;connection(‘mydefine’)可以获取该连接对象;</p></blockquote><blockquote><p>mycluster1是笔者定义的Redis集群对象名;<br>通过执行app(‘redis’)-&gt;connection(‘mycluster1’)可以获取该集群对象;</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token string single-quoted-string">'redis'</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>                <span class="token string single-quoted-string">'client'</span>   <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'predis'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'default'</span>  <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>                    <span class="token string single-quoted-string">'host'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string single-quoted-string">'password'</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string single-quoted-string">'port'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string single-quoted-string">'database'</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'mydefine'</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>                    <span class="token string single-quoted-string">'host'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string single-quoted-string">'password'</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string single-quoted-string">'port'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string single-quoted-string">'database'</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'clusters'</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>                    <span class="token string single-quoted-string">'mycluster1'</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>                        <span class="token punctuation">[</span>                            <span class="token string single-quoted-string">'host'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'password'</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'port'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'database'</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">[</span>                            <span class="token string single-quoted-string">'host'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'password'</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'port'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'database'</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">[</span>                            <span class="token string single-quoted-string">'host'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'password'</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'port'</span>     <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token string single-quoted-string">'database'</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用:"></a>3.使用:</h1><h2 id="3-1-简单"><a href="#3-1-简单" class="headerlink" title="3.1 简单:"></a>3.1 简单:</h2><h3 id="3-1-1-字符串-String-操作："><a href="#3-1-1-字符串-String-操作：" class="headerlink" title="3.1.1 字符串(String)操作："></a>3.1.1 字符串(String)操作：</h3><h4 id="3-1-1-1-普通-set-get-操作"><a href="#3-1-1-1-普通-set-get-操作" class="headerlink" title="3.1.1.1 普通 set / get 操作"></a>3.1.1.1 普通 <code>set</code> / <code>get</code> 操作</h4><p>set操作，如果键名存在，则会覆盖原有的值；</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'redis.connection'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'library'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'predis'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 存储 key 为 library， 值为 predis 的记录；</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'library'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取 key 为 library 的记录值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-1-2-set-get多个-key-value"><a href="#3-1-1-2-set-get多个-key-value" class="headerlink" title="3.1.1.2 set / get多个 key-value"></a>3.1.1.2 <code>set</code> / <code>get</code>多个 key-value</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$mkv</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>    <span class="token string single-quoted-string">'usr:0001'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'First user'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'usr:0002'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Second user'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'usr:0003'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'Third user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">mset</span><span class="token punctuation">(</span><span class="token variable">$mkv</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 存储多个 key 对应的 value</span><span class="token variable">$retval</span> <span class="token operator">=</span> <span class="token variable">$redis</span> <span class="token operator">-&gt;</span> <span class="token function">mget</span> <span class="token punctuation">(</span><span class="token function">array_keys</span><span class="token punctuation">(</span> <span class="token variable">$mkv</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取多个key对应的value</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>set</code> 的变种，结果返回替换前的值</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">getset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// 返回 34； 如果之前不存在记录，则返回 null</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-3-setex-存放带存储时效的记录"><a href="#3-1-1-3-setex-存放带存储时效的记录" class="headerlink" title="3.1.1.3  setex 存放带存储时效的记录"></a>3.1.1.3  <code>setex</code> 存放带存储时效的记录</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">setex</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'library'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'predis'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 存储 key 为 library， 值为 predis 的记录, 有效时长为 10 秒</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-4-setnx操作-不会覆盖已有值"><a href="#3-1-1-4-setnx操作-不会覆盖已有值" class="headerlink" title="3.1.1.4  setnx操作,不会覆盖已有值"></a>3.1.1.4  <code>setnx</code>操作,不会覆盖已有值</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// 返回 true ， 添加成功</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// 返回 false， 添加失败，因为已经存在键名为 foo 的记录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-1-5-incrby-incr-decrby-decr-对值的递增和递减"><a href="#3-1-1-5-incrby-incr-decrby-decr-对值的递增和递减" class="headerlink" title="3.1.1.5 incrby/incr/decrby/decr 对值的递增和递减"></a>3.1.1.5 <code>incrby</code>/<code>incr</code>/<code>decrby</code>/<code>decr</code> 对值的递增和递减</h4><blockquote><p><code>incr</code>  key 中储存的数字值增一。如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 INCR 操作。如果值包含错误的类型，或字符串类型的值不能表示为数字，那么返回一个错误。本操作的值限制在 64 位(bit)有符号数字表示之内。<br><code>Incrby</code> 命令将 key 中储存的数字加上指定的增量值。</p></blockquote><hr><blockquote><p><code>decr</code>  key 中储存的数字值减一。如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 DECR 操作。如果值包含错误的类型，或字符串类型的值不能表示为数字，那么返回一个错误。本操作的值限制在 64 位(bit)有符号数字表示之内。<br><code>decrby</code> 命令将 key 所储存的值减去指定的减量值。</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">incr</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// 返回 57，同时 foo 的值为 57</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">incrby</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// 返回 59，同时 foo 的值为 59</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-1-6-exists检测是否存在值"><a href="#3-1-1-6-exists检测是否存在值" class="headerlink" title="3.1.1.6 exists检测是否存在值"></a>3.1.1.6 <code>exists</code>检测是否存在值</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-7-del删除"><a href="#3-1-1-7-del删除" class="headerlink" title="3.1.1.7 del删除"></a>3.1.1.7 <code>del</code>删除</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 成功删除返回 true, 失败则返回 false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-8-type类型检测"><a href="#3-1-1-8-type类型检测" class="headerlink" title="3.1.1.8 type类型检测"></a>3.1.1.8 <code>type</code>类型检测</h4><blockquote><p><code>type</code>类型检测:<br>  字符串返回 string，<br>  列表返回 list，<br>  set 表返回 set/zset，<br>  hash 表返回 hash;</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-9-append-连接到已存在字符串"><a href="#3-1-1-9-append-连接到已存在字符串" class="headerlink" title="3.1.1.9 append 连接到已存在字符串"></a>3.1.1.9 <code>append</code> 连接到已存在字符串</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 test</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'_123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回累加后的字符串长度 8,此时 str 为 'test_123'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-1-10-setrange-部分替换操作-并返回字符串长度"><a href="#3-1-1-10-setrange-部分替换操作-并返回字符串长度" class="headerlink" title="3.1.1.10 setrange 部分替换操作, 并返回字符串长度"></a>3.1.1.10 <code>setrange</code> 部分替换操作, 并返回字符串长度</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">setrange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回 3, 第2个参数为 0 时等同于 set 操作</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">setrange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 4, 表示从第2个字符后替换，这时 'str' 为 'abcd'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-1-11-substr-部分获取操作"><a href="#3-1-1-11-substr-部分获取操作" class="headerlink" title="3.1.1.11 substr 部分获取操作"></a>3.1.1.11 <code>substr</code> 部分获取操作</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回'abc'; 表示从第 0 个起，取到第 2 个字符</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-12-strlen-获取字符串长度"><a href="#3-1-1-12-strlen-获取字符串长度" class="headerlink" title="3.1.1.12 strlen 获取字符串长度"></a>3.1.1.12 <code>strlen</code> 获取字符串长度</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">strlen</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 4; 此时 'str' 为 'abcd'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-13-setbit位存储"><a href="#3-1-1-13-setbit位存储" class="headerlink" title="3.1.1.13 setbit位存储"></a>3.1.1.13 <code>setbit</code>位存储</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">setbit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'binary'</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//表示在第31位存入1,这边可能会有大小端问题?不过没关系, getbit 应该不会有问题</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-14-getbit位获取"><a href="#3-1-1-14-getbit位获取" class="headerlink" title="3.1.1.14 getbit位获取"></a>3.1.1.14 <code>getbit</code>位获取</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">getbit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'binary'</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-15-keys-模糊查找功能-支持-号以及-号-匹配一个字符"><a href="#3-1-1-15-keys-模糊查找功能-支持-号以及-号-匹配一个字符" class="headerlink" title="3.1.1.15 keys 模糊查找功能,支持 * 号以及 ? 号 (匹配一个字符)"></a>3.1.1.15 <code>keys</code> 模糊查找功能,支持 * 号以及 ? 号 (匹配一个字符)</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo1'</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo2'</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 返回 foo1 和 foo2 的 array</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'f?o?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 同上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-1-1-16-randomkey随机返回一个key"><a href="#3-1-1-16-randomkey随机返回一个key" class="headerlink" title="3.1.1.16 randomkey随机返回一个key"></a>3.1.1.16 <code>randomkey</code>随机返回一个key</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">randomkey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// 可能是返回 'foo1' 或者是 'foo2' 及其它任何已存在的 key</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-17-rename-renamenx方法对key进行改名"><a href="#3-1-1-17-rename-renamenx方法对key进行改名" class="headerlink" title="3.1.1.17 rename/renamenx方法对key进行改名"></a>3.1.1.17 <code>rename</code>/<code>renamenx</code>方法对key进行改名</h4><blockquote><p><code>rename</code>/<code>renamenx</code>方法对key进行改名，所不同的是renamenx不允许改成已存在的key</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'str2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把原先命名为'str'的 key 改成了 'str2'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-18-expire-设置-key-value-的时效性"><a href="#3-1-1-18-expire-设置-key-value-的时效性" class="headerlink" title="3.1.1.18 expire 设置 key-value 的时效性"></a>3.1.1.18 <code>expire</code> 设置 key-value 的时效性</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置有效期为 10 秒</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-19-ttl-获取剩余有效期"><a href="#3-1-1-19-ttl-获取剩余有效期" class="headerlink" title="3.1.1.19 ttl 获取剩余有效期"></a>3.1.1.19 <code>ttl</code> 获取剩余有效期</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">ttl</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回剩余有效期值 10 秒</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-20-persist-重新设置为永久存储"><a href="#3-1-1-20-persist-重新设置为永久存储" class="headerlink" title="3.1.1.20 persist 重新设置为永久存储"></a>3.1.1.20 <code>persist</code> 重新设置为永久存储</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">persisit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 取消 expire 行为</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-1-21-dbsize-返回redis当前数据库的记录总数"><a href="#3-1-1-21-dbsize-返回redis当前数据库的记录总数" class="headerlink" title="3.1.1.21 dbsize 返回redis当前数据库的记录总数"></a>3.1.1.21 <code>dbsize</code> 返回redis当前数据库的记录总数</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">dbsize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-1-2-列表（List）操作"><a href="#3-1-2-列表（List）操作" class="headerlink" title="3.1.2 列表（List）操作:"></a>3.1.2 列表（List）操作:</h3><h4 id="3-1-2-1-rpush-rpushx-插入"><a href="#3-1-2-1-rpush-rpushx-插入" class="headerlink" title="3.1.2.1 rpush/rpushx 插入"></a>3.1.2.1 <code>rpush</code>/<code>rpushx</code> 插入</h4><blockquote><p><code>rpush</code>/<code>rpushx</code> 有序列表操作,从队列后插入元素 <code>后面插入</code>；<br><code>lpush</code>/<code>lpushx</code>有序列表操作,从队列后插入元素;<br><code>x</code>含义是只对已存在的 key 进行操作</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bar1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回列表长度 1</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bar0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回列表长度 2</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpushx</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bar2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回 3, rpushx只对已存在的队列做添加,否则返回 0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-2-2-llen返回当前列表长度"><a href="#3-1-2-2-llen返回当前列表长度" class="headerlink" title="3.1.2.2 llen返回当前列表长度"></a>3.1.2.2 <code>llen</code>返回当前列表长度</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">llen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-2-3-lrange-返回队列中一个区间的元素"><a href="#3-1-2-3-lrange-返回队列中一个区间的元素" class="headerlink" title="3.1.2.3 lrange 返回队列中一个区间的元素"></a>3.1.2.3 <code>lrange</code> 返回队列中一个区间的元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lrange</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回数组包含第 0 个至第 1 个, 共2个元素</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lrange</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回第0个至倒数第一个, 相当于返回所有元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-2-4-lindex-返回指定顺序位置的-list-元素"><a href="#3-1-2-4-lindex-返回指定顺序位置的-list-元素" class="headerlink" title="3.1.2.4 lindex 返回指定顺序位置的 list 元素"></a>3.1.2.4 <code>lindex</code> 返回指定顺序位置的 list 元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lindex</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// 返回'bar1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-2-5-lset-修改队列中指定位置的value"><a href="#3-1-2-5-lset-修改队列中指定位置的value" class="headerlink" title="3.1.2.5 lset 修改队列中指定位置的value"></a>3.1.2.5 <code>lset</code> 修改队列中指定位置的value</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修改位置 1 的元素, 返回 true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-2-6-lrem-删除队列中左起指定数量的字符"><a href="#3-1-2-6-lrem-删除队列中左起指定数量的字符" class="headerlink" title="3.1.2.6 lrem 删除队列中左起指定数量的字符"></a>3.1.2.6 <code>lrem</code> 删除队列中左起指定数量的字符</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lrem</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'_'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// 删除队列中左起(右起使用-1) 1个 字符'_'(若有)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-2-7-lpop-rpop-类似栈结构地弹出-并删除-最左或最右的一个元素"><a href="#3-1-2-7-lpop-rpop-类似栈结构地弹出-并删除-最左或最右的一个元素" class="headerlink" title="3.1.2.7 lpop/rpop 类似栈结构地弹出(并删除)最左或最右的一个元素"></a>3.1.2.7 <code>lpop</code>/<code>rpop</code> 类似栈结构地弹出(并删除)最左或最右的一个元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lpop</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// 返回 'bar0'</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpop</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// 返回 'bar2'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-2-8-ltrim-队列修改，保留左边起若干元素，其余删除"><a href="#3-1-2-8-ltrim-队列修改，保留左边起若干元素，其余删除" class="headerlink" title="3.1.2.8 ltrim 队列修改，保留左边起若干元素，其余删除"></a>3.1.2.8 <code>ltrim</code> 队列修改，保留左边起若干元素，其余删除</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">ltrim</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fooList'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// 保留左边起第 0 个至第 1 个元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-2-9-rpoplpush-从一个队列中-pop-出元素并-push-到另一个队列"><a href="#3-1-2-9-rpoplpush-从一个队列中-pop-出元素并-push-到另一个队列" class="headerlink" title="3.1.2.9 rpoplpush 从一个队列中 pop 出元素并 push 到另一个队列"></a>3.1.2.9 <code>rpoplpush</code> 从一个队列中 pop 出元素并 push 到另一个队列</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpoplpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'list2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 结果list1 =&gt;array('ab0'), list2 =&gt;array('ab1','ab2','ab3')</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpoplpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'list2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 也适用于同一个队列, 把最后一个元素移到头部 list2 =&gt;array('ab3','ab1','ab2')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-1-2-10-linsert-在队列的中间指定元素前或后插入元素"><a href="#3-1-2-10-linsert-在队列的中间指定元素前或后插入元素" class="headerlink" title="3.1.2.10 linsert 在队列的中间指定元素前或后插入元素"></a>3.1.2.10 <code>linsert</code> 在队列的中间指定元素前或后插入元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">linsert</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'before'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//表示在元素 'ab1' 之前插入 '123'</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">linsert</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'after'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//表示在元素 'ab1' 之后插入 '456'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-2-11-blpop-brpop-阻塞并等待pop出最左或最右的一个元素"><a href="#3-1-2-11-blpop-brpop-阻塞并等待pop出最左或最右的一个元素" class="headerlink" title="3.1.2.11 blpop/brpop 阻塞并等待pop出最左或最右的一个元素"></a>3.1.2.11 <code>blpop</code>/<code>brpop</code> 阻塞并等待pop出最左或最右的一个元素</h4><blockquote><p><code>blpop</code>/<code>brpop</code> 阻塞并等待一个列队不为空时，再pop出最左或最右的一个元素（这个功能在php以外可以说非常好用）</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">blpop</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list3'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">// 如果 list3 为空则一直等待,直到不为空时将第一元素弹出, 10 秒后超时</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-1-3-集合-Set-操作"><a href="#3-1-3-集合-Set-操作" class="headerlink" title="3.1.3 集合(Set)操作:"></a>3.1.3 集合(Set)操作:</h3><h4 id="3-1-3-1-sadd-增加set集合元素，-返回true，-重复返回false"><a href="#3-1-3-1-sadd-增加set集合元素，-返回true，-重复返回false" class="headerlink" title="3.1.3.1 sadd 增加set集合元素， 返回true， 重复返回false"></a>3.1.3.1 <code>sadd</code> 增加set集合元素， 返回true， 重复返回false</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ef'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-3-2-srem-移除指定元素"><a href="#3-1-3-2-srem-移除指定元素" class="headerlink" title="3.1.3.2  srem 移除指定元素"></a>3.1.3.2  <code>srem</code> 移除指定元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">srem</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 删除'cd'元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-3-3-spop-弹出首元素"><a href="#3-1-3-3-spop-弹出首元素" class="headerlink" title="3.1.3.3 spop 弹出首元素"></a>3.1.3.3 <code>spop</code> 弹出首元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">spop</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 'ab'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-3-4-smove-移动当前set集合的指定元素到另一个set集合"><a href="#3-1-3-4-smove-移动当前set集合的指定元素到另一个set集合" class="headerlink" title="3.1.3.4 smove 移动当前set集合的指定元素到另一个set集合"></a>3.1.3.4 <code>smove</code> 移动当前set集合的指定元素到另一个set集合</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">smove</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'set2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 移动'set1'中的'ab'到'set2', 返回true or false；此时 'set1'集合不存在 'ab' 这个值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-3-5-scard-返回当前set表元素个数"><a href="#3-1-3-5-scard-返回当前set表元素个数" class="headerlink" title="3.1.3.5 scard 返回当前set表元素个数"></a>3.1.3.5 <code>scard</code> 返回当前set表元素个数</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">scard</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-3-6-sismember-判断元素是否属于当前set集合"><a href="#3-1-3-6-sismember-判断元素是否属于当前set集合" class="headerlink" title="3.1.3.6 sismember 判断元素是否属于当前set集合"></a>3.1.3.6 <code>sismember</code> 判断元素是否属于当前set集合</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sismember</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 true or false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-3-7-smembers-返回当前set集合的所有元素"><a href="#3-1-3-7-smembers-返回当前set集合的所有元素" class="headerlink" title="3.1.3.7 smembers 返回当前set集合的所有元素"></a>3.1.3.7 <code>smembers</code> 返回当前set集合的所有元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">smembers</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 array('123','ab')</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-3-8-sinter-sunion-sdiff-返回两个表的集合（交集、并集、补集）"><a href="#3-1-3-8-sinter-sunion-sdiff-返回两个表的集合（交集、并集、补集）" class="headerlink" title="3.1.3.8 sinter/sunion/sdiff 返回两个表的集合（交集、并集、补集）"></a>3.1.3.8 <code>sinter</code>/<code>sunion</code>/<code>sdiff</code> 返回两个表的集合（交集、并集、补集）</h4><blockquote><p><code>sinter</code>返回两个表中元素的交集 <br><code>sunion</code> 返回两个表中元素的并集<br><code>sdiff</code> 返回两个表中元素的补集</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sinter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'set1'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">//返回array('ab')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-3-9-sinterstore-sunionstore-sdiffstore-返回两个表的集合（交集、并集、补集）copy-到第三个表中"><a href="#3-1-3-9-sinterstore-sunionstore-sdiffstore-返回两个表的集合（交集、并集、补集）copy-到第三个表中" class="headerlink" title="3.1.3.9 sinterstore/sunionstore/sdiffstore 返回两个表的集合（交集、并集、补集）copy 到第三个表中"></a>3.1.3.9 <code>sinterstore</code>/<code>sunionstore</code>/<code>sdiffstore</code> 返回两个表的集合（交集、并集、补集）copy 到第三个表中</h4><blockquote><p><code>sinterstore</code> 将两个表交集 copy 到第三个表中<br><code>sunionstore</code> 将两个表并集 copy 到第三个表中<br><code>sdiffstore</code> 将两个表补集元素 copy 到第三个表中</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sinterstore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'set1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 等同于将'set1'的内容copy到'foo'中，并将'foo'转为set表</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sinterstore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'foo'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'set2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将'set1'和'set2'中相同的元素 copy 到'foo'表中, 覆盖'foo'原有内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-3-10-srandmember-返回表中一个随机元素"><a href="#3-1-3-10-srandmember-返回表中一个随机元素" class="headerlink" title="3.1.3.10 srandmember 返回表中一个随机元素"></a>3.1.3.10 <code>srandmember</code> 返回表中一个随机元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">srandmember</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'set1'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-1-4-有序集合-sorted-set-操作"><a href="#3-1-4-有序集合-sorted-set-操作" class="headerlink" title="3.1.4 有序集合(sorted set)操作"></a>3.1.4 有序集合(sorted set)操作</h3><h4 id="3-1-4-1-sadd-增加元素，并设置序号"><a href="#3-1-4-1-sadd-增加元素，并设置序号" class="headerlink" title="3.1.4.1 sadd 增加元素，并设置序号"></a>3.1.4.1 <code>sadd</code> 增加元素，并设置序号</h4><blockquote><p>成功返回true，重复返回false</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ef'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-4-2-zincrby-对指定元素索引值的增减-改变元素排列次序"><a href="#3-1-4-2-zincrby-对指定元素索引值的增减-改变元素排列次序" class="headerlink" title="3.1.4.2 zincrby 对指定元素索引值的增减,改变元素排列次序"></a>3.1.4.2 <code>zincrby</code> 对指定元素索引值的增减,改变元素排列次序</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span> <span class="token operator">-&gt;</span> <span class="token function">zincrby</span> <span class="token punctuation">(</span> <span class="token string single-quoted-string">'zset1'</span> <span class="token punctuation">,</span> <span class="token number">10</span> <span class="token punctuation">,</span> <span class="token string single-quoted-string">'ab'</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">//返回11</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-3-zrem-移除指定元素"><a href="#3-1-4-3-zrem-移除指定元素" class="headerlink" title="3.1.4.3 zrem 移除指定元素"></a>3.1.4.3 <code>zrem</code> 移除指定元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrem</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ef'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 true or false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-4-zrange-按位置次序返回表中指定区间的元素"><a href="#3-1-4-4-zrange-按位置次序返回表中指定区间的元素" class="headerlink" title="3.1.4.4 zrange 按位置次序返回表中指定区间的元素"></a>3.1.4.4 <code>zrange</code> 按位置次序返回表中指定区间的元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回位置 0 和 1 之间(两个)的元素</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回位置 0 和倒数第一个元素之间的元素(相当于所有元素)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-4-5-zrevrange-同上-返回表中指定区间的元素-按次序倒排"><a href="#3-1-4-5-zrevrange-同上-返回表中指定区间的元素-按次序倒排" class="headerlink" title="3.1.4.5 zrevrange 同上,返回表中指定区间的元素,按次序倒排"></a>3.1.4.5 <code>zrevrange</code> 同上,返回表中指定区间的元素,按次序倒排</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrevrange</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 元素顺序和zrange相反</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-6-zrangebyscore-zrevrangebyscore-顺序-降序-返回表中指定索引区间的元素"><a href="#3-1-4-6-zrangebyscore-zrevrangebyscore-顺序-降序-返回表中指定索引区间的元素" class="headerlink" title="3.1.4.6 zrangebyscore/zrevrangebyscore(顺序/降序)返回表中指定索引区间的元素"></a>3.1.4.6 <code>zrangebyscore</code>/<code>zrevrangebyscore</code>(顺序/降序)返回表中指定索引区间的元素</h4><blockquote><p><code>zrangebyscore</code> 按顺序返回表中指定索引区间的元素<br><code>zrevrangebyscore</code> 按降序返回表中指定索引区间的元素</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ef'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zadd</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'gh'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrangebyscore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//返回索引值2-9之间的元素 array('ef','gh')</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrangebyscore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'withscores'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回索引值2-9之间的元素并包含索引值 array(array('ef',3),array('gh',5))</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrangebyscore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'withscores'</span><span class="token operator">=&gt;</span><span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'limit'</span><span class="token operator">=&gt;</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//返回索引值2-9之间的元素,'withscores' =&gt;true表示包含索引值; 'limit'=&gt;array(1, 2),表示偏移1条，返回2条,结果为array(array('ef',3),array('gh',5))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-1-4-7-zunionstore-zinterstore-将多个表的-并集-交集-存入另一个表中"><a href="#3-1-4-7-zunionstore-zinterstore-将多个表的-并集-交集-存入另一个表中" class="headerlink" title="3.1.4.7 zunionstore/zinterstore 将多个表的(并集/交集)存入另一个表中"></a>3.1.4.7 <code>zunionstore</code>/<code>zinterstore</code> 将多个表的(并集/交集)存入另一个表中</h4><blockquote><p><code>zunionstore</code> 将多个表的并集存入另一个表中<br><code>zinterstore</code> 将多个表的交集存入另一个表中</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zunionstore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset3'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'zset2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'zset0'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//将'zset1','zset2','zset0'的并集存入'zset3'</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zunionstore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset3'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'zset2'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'weights'</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//weights参数表示权重，其中表示并集后 zset1集合的分 * 2 后存储到 zset3 集合， zset2集合的分 * 1 后存储到 zset3 集合</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zunionstore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset3'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'zset2'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aggregate'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'max'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//'aggregate' =&gt; 'max'或'min'表示并集后相同的元素是取大值或是取小值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-4-8-zcount-统计一个索引区间的元素个数"><a href="#3-1-4-8-zcount-统计一个索引区间的元素个数" class="headerlink" title="3.1.4.8 zcount 统计一个索引区间的元素个数"></a>3.1.4.8 <code>zcount</code> 统计一个索引区间的元素个数</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zcount</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 2</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zcount</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'(3'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//'(3'表示索引值在3-5之间但不含3,同理也可以使用'(5'表示上限为5但不含5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-4-9-zcard-统计元素个数"><a href="#3-1-4-9-zcard-统计元素个数" class="headerlink" title="3.1.4.9 zcard 统计元素个数"></a>3.1.4.9 <code>zcard</code> 统计元素个数</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zcard</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-10-zscore-查询元素的索引"><a href="#3-1-4-10-zscore-查询元素的索引" class="headerlink" title="3.1.4.10 zscore 查询元素的索引"></a>3.1.4.10 <code>zscore</code> 查询元素的索引</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zscore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ef'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-11-zremrangebyscore-删除一个索引区间的元素"><a href="#3-1-4-11-zremrangebyscore-删除一个索引区间的元素" class="headerlink" title="3.1.4.11 zremrangebyscore 删除一个索引区间的元素"></a>3.1.4.11 <code>zremrangebyscore</code> 删除一个索引区间的元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zremrangebyscore</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 删除索引在0-2之间的元素('ab','cd'), 返回删除元素个数2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-12-zrank-zrevrank-返回元素所在表-顺序-降序-的位置-不是索引"><a href="#3-1-4-12-zrank-zrevrank-返回元素所在表-顺序-降序-的位置-不是索引" class="headerlink" title="3.1.4.12 zrank/zrevrank 返回元素所在表(顺序/降序)的位置(不是索引)"></a>3.1.4.12 <code>zrank</code>/<code>zrevrank</code> 返回元素所在表(顺序/降序)的位置(不是索引)</h4><blockquote><p><code>zrank</code> 返回元素所在表顺序的位置(不是索引)<br><code>zrevrank</code> 返回元素所在表降序的位置(不是索引)</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zrank</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ef'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回0,因为它是第一个元素；zrevrank则返回1(最后一个)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-4-13-zremrangebyrank-删除表中指定位置区间的元素"><a href="#3-1-4-13-zremrangebyrank-删除表中指定位置区间的元素" class="headerlink" title="3.1.4.13 zremrangebyrank 删除表中指定位置区间的元素"></a>3.1.4.13 <code>zremrangebyrank</code> 删除表中指定位置区间的元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">zremrangebyrank</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'zset1'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除位置为0-10的元素,返回删除的元素个数2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-1-5-哈希-Hash-表操作"><a href="#3-1-5-哈希-Hash-表操作" class="headerlink" title="3.1.5 哈希(Hash)表操作"></a>3.1.5 哈希(Hash)表操作</h3><h4 id="3-1-5-1-hset-hget-hash表的存取"><a href="#3-1-5-1-hset-hget-hash表的存取" class="headerlink" title="3.1.5.1 hset/hget hash表的存取"></a>3.1.5.1 <code>hset</code>/<code>hget</code> hash表的存取</h4><blockquote><p><code>hset</code> 存hash表的数据<br><code>hget</code> 取hash表的数据</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'v1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//将key为'key1' value为'v1'的元素存入hash1表</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'v2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hget</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//取出表'hash1'中的key 'key1'的值,返回'v1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-1-5-2-hexists-返回hash表中的指定key是否存在"><a href="#3-1-5-2-hexists-返回hash表中的指定key是否存在" class="headerlink" title="3.1.5.2 hexists 返回hash表中的指定key是否存在"></a>3.1.5.2 <code>hexists</code> 返回hash表中的指定key是否存在</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hexists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key1'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">//true or false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-5-3-hdel-删除hash表中指定key的元素"><a href="#3-1-5-3-hdel-删除hash表中指定key的元素" class="headerlink" title="3.1.5.3 hdel 删除hash表中指定key的元素"></a>3.1.5.3 <code>hdel</code> 删除hash表中指定key的元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hdel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key2'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">//true or false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-5-4-hlen-返回hash表元素个数"><a href="#3-1-5-4-hlen-返回hash表元素个数" class="headerlink" title="3.1.5.4 hlen 返回hash表元素个数"></a>3.1.5.4 <code>hlen</code> 返回hash表元素个数</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hlen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-5-5-hsetnx-增加一个元素-但不能重复"><a href="#3-1-5-5-hsetnx-增加一个元素-但不能重复" class="headerlink" title="3.1.5.5 hsetnx 增加一个元素,但不能重复"></a>3.1.5.5 <code>hsetnx</code> 增加一个元素,但不能重复</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hsetnx</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'v2'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// false</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hsetnx</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'v2'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>  <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-5-6-hmset-存多个元素到hash表hmget-取多个元素到hash表"><a href="#3-1-5-6-hmset-存多个元素到hash表hmget-取多个元素到hash表" class="headerlink" title="3.1.5.6 hmset 存多个元素到hash表hmget 取多个元素到hash表"></a>3.1.5.6 <code>hmset</code> 存多个元素到hash表<br><code>hmget</code> 取多个元素到hash表</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hmset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key3'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'v3'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key4'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'v4'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hmget</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key3'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key4'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回相应的值 array('v3','v4')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-5-7-hincrby-对指定key进行累加"><a href="#3-1-5-7-hincrby-对指定key进行累加" class="headerlink" title="3.1.5.7 hincrby 对指定key进行累加"></a>3.1.5.7 <code>hincrby</code> 对指定key进行累加</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hincrby</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key5'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 不存在，则存储并返回 3；存在，即返回 原有值 + 3；</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hincrby</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'key5'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回13</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-5-8-hkeys-返回hash表中的所有key"><a href="#3-1-5-8-hkeys-返回hash表中的所有key" class="headerlink" title="3.1.5.8 hkeys 返回hash表中的所有key"></a>3.1.5.8 <code>hkeys</code> 返回hash表中的所有key</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hkeys</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回array('key1', 'key2', 'key3', 'key4', 'key5')</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-5-9-hvals-返回hash表中的所有value"><a href="#3-1-5-9-hvals-返回hash表中的所有value" class="headerlink" title="3.1.5.9 hvals 返回hash表中的所有value"></a>3.1.5.9 <code>hvals</code> 返回hash表中的所有value</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hvals</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 array('v1','v2','v3','v4',13)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-5-10-hgetall-返回整个hash表元素"><a href="#3-1-5-10-hgetall-返回整个hash表元素" class="headerlink" title="3.1.5.10 hgetall 返回整个hash表元素"></a>3.1.5.10 <code>hgetall</code> 返回整个hash表元素</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">hgetall</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hash1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 array('key1'=&gt;'v1','key2'=&gt;'v2','key3'=&gt;'v3','key4'=&gt;'v4','key5'=&gt;13)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-1-6-排序操作"><a href="#3-1-6-排序操作" class="headerlink" title="3.1.6 排序操作"></a>3.1.6 排序操作</h3><h4 id="3-1-6-1-sort-排序"><a href="#3-1-6-1-sort-排序" class="headerlink" title="3.1.6.1 sort 排序"></a>3.1.6.1 <code>sort</code> 排序</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 返回 array(2,3,17)</span> <span class="token comment">// 使用参数,可组合使用 array('sort' =&gt; 'desc','limit' =&gt; array(1, 2))</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sort'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'desc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 降序排列，返回 array(17,3,2)</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'limit'</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//返回顺序位置中1的元素2个(这里的2是指个数,而不是位置)，返回array(3,17</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'limit'</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'alpha'</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//按首字符排序返回array(17,2,3)，因为17的首字符是'1'所以排首位置</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'limit'</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'store'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'ordered'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//表示永久性排序，返回元素个数</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tab'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'limit'</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'get'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'pre_*'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//使用了通配符'*'过滤元素，表示只返回以'pre_'开头的元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-1-7-Redis管理操作"><a href="#3-1-7-Redis管理操作" class="headerlink" title="3.1.7 Redis管理操作"></a>3.1.7 Redis管理操作</h3><h4 id="3-1-7-1-info-显示服务当状态信息"><a href="#3-1-7-1-info-显示服务当状态信息" class="headerlink" title="3.1.7.1 info 显示服务当状态信息"></a>3.1.7.1 <code>info</code> 显示服务当状态信息</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-7-2-select-指定要操作的数据库"><a href="#3-1-7-2-select-指定要操作的数据库" class="headerlink" title="3.1.7.2 select 指定要操作的数据库"></a>3.1.7.2 <code>select</code> 指定要操作的数据库</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指定数据库的下标</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-7-3-flushdb-清空当前库"><a href="#3-1-7-3-flushdb-清空当前库" class="headerlink" title="3.1.7.3 flushdb 清空当前库"></a>3.1.7.3 <code>flushdb</code> 清空当前库</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">flushdb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-7-4-move-移动当库的元素到其它数据库"><a href="#3-1-7-4-move-移动当库的元素到其它数据库" class="headerlink" title="3.1.7.4 move 移动当库的元素到其它数据库"></a>3.1.7.4 <code>move</code> 移动当库的元素到其它数据库</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tomove'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'bar'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'tomove'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-7-5-slaveof-配置从服务器"><a href="#3-1-7-5-slaveof-配置从服务器" class="headerlink" title="3.1.7.5 slaveof 配置从服务器"></a>3.1.7.5 <code>slaveof</code> 配置从服务器</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">slaveof</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 配置 127.0.0.1 端口 80 的服务器为从服务器</span><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">slaveof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 清除从服务器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-1-7-6-save-同步保存服务器数据到磁盘"><a href="#3-1-7-6-save-同步保存服务器数据到磁盘" class="headerlink" title="3.1.7.6 save 同步保存服务器数据到磁盘"></a>3.1.7.6 <code>save</code> 同步保存服务器数据到磁盘</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-7-7-bgsave-异步保存服务器数据到磁盘"><a href="#3-1-7-7-bgsave-异步保存服务器数据到磁盘" class="headerlink" title="3.1.7.7 bgsave 异步保存服务器数据到磁盘"></a>3.1.7.7 <code>bgsave</code> 异步保存服务器数据到磁盘</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">bgsave</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1-7-8-lastsave-返回最后更新磁盘的时间"><a href="#3-1-7-8-lastsave-返回最后更新磁盘的时间" class="headerlink" title="3.1.7.8 lastsave 返回最后更新磁盘的时间"></a>3.1.7.8 <code>lastsave</code> 返回最后更新磁盘的时间</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">lastsave</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-2-集群"><a href="#3-2-集群" class="headerlink" title="3.2 集群:"></a>3.2 集群:</h2><pre class="line-numbers language-none"><code class="language-none">// 等待探索<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-3-订阅"><a href="#3-3-订阅" class="headerlink" title="3.3 订阅"></a>3.3 订阅</h2><p>可以阅读Laravel 的 Redis 使用指南中关于发布与订阅的章节，了解使用过程；</p><p>订阅和发布本质上是一种监听触发；订阅功能可以监听指定频道的消息，基于长连接的通信，完成信息接收；而发布则是触发监听的开始;<br>说明：上述涉及操作代码均来自<a href="https://www.open-open.com/lib/view/open1355830836135.html">利用predis操作redis方法大全</a>文章;</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习笔记（二）</title>
      <link href="2019/05/06/jiqi-2/"/>
      <url>2019/05/06/jiqi-2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据分析"><a href="#1-数据分析" class="headerlink" title="1.数据分析"></a>1.数据分析</h1><h2 id="1-1-数据分析的过程"><a href="#1-1-数据分析的过程" class="headerlink" title="1.1 数据分析的过程"></a>1.1 数据分析的过程</h2><pre class="line-numbers language-none"><code class="language-none">提出问题:    提出的问题与数据保持较高的相关性，让问题更加有趣，并且可以引导出有价值的结论。数据处理:    数据搜集、数据评估、数据清洗（异常值、缺失值、重复值等）探索数据:    数据可视化等。得出结论:    算法建模、推断统计、数据预测。结果报告:    传达结果的方法有多种：报告、幻灯片、博客帖子、电子邮件、演示文稿等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2-数据分析函数库"><a href="#1-2-数据分析函数库" class="headerlink" title="1.2 数据分析函数库"></a>1.2 数据分析函数库</h2><p><code>Numpy</code>：</p><blockquote><p>是Python语言的一个扩充程序库。支持高级大量的维度数组与矩阵运算。此外也针对数组运算提供大量的数学函数库。运算效率高，是大量机器学习框架的基础库。</p></blockquote><p><code>Pandas</code>：</p><blockquote><p>Python的一个数据分析包。Pandas纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具以及能使我们快速便捷地处理数据的函数和方法。</p></blockquote><p><code>Matplotlib</code>：</p><blockquote><p>Python的2D绘图库，以各种硬拷贝格式和跨平台的交互式环境生成出版质量级别的图形。通过Matplotlib，开发者可以仅需要几行代码，便可以生成绘图、直方图、功率谱、条形图、错误图、散点图等。</p></blockquote><h1 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a>2.过程</h1><h2 id="2-1-提出问题"><a href="#2-1-提出问题" class="headerlink" title="2.1 提出问题"></a>2.1 提出问题</h2><blockquote><p>需要解决的问题</p></blockquote><h2 id="2-2-数据处理"><a href="#2-2-数据处理" class="headerlink" title="2.2 数据处理"></a>2.2 数据处理</h2><blockquote><p>整理数据的相关性</p></blockquote><h3 id="2-2-1数据收集"><a href="#2-2-1数据收集" class="headerlink" title="2.2.1数据收集"></a>2.2.1数据收集</h3><p>公开数据：</p><blockquote><p>UCI, Kaggle, KDDcup, mldata</p></blockquote><p>专业性数据：</p><blockquote><p>银监会、证监会、统计局等</p></blockquote><h3 id="2-2-2-数据评估"><a href="#2-2-2-数据评估" class="headerlink" title="2.2.2 数据评估"></a>2.2.2 数据评估</h3><blockquote><p>缺失？重复</p></blockquote><h3 id="2-2-3-数据清洗"><a href="#2-2-3-数据清洗" class="headerlink" title="2.2.3 数据清洗"></a>2.2.3 数据清洗</h3><blockquote><p>数据整理,高质量</p></blockquote><h2 id="2-3-探索数据"><a href="#2-3-探索数据" class="headerlink" title="2.3 探索数据"></a>2.3 探索数据</h2><blockquote><p>数据（可视化）寻找规律和关键点</p></blockquote><h2 id="2-4-得出结论"><a href="#2-4-得出结论" class="headerlink" title="2.4 得出结论"></a>2.4 得出结论</h2><blockquote><p>算法建模，推断统计，结果预测（准确性反应了模型的优劣）</p></blockquote><h2 id="2-5-结果报告"><a href="#2-5-结果报告" class="headerlink" title="2.5 结果报告"></a>2.5 结果报告</h2><blockquote><p>报告，数据可视化。需求使用</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习笔记（一）</title>
      <link href="2019/05/06/jiqi-1/"/>
      <url>2019/05/06/jiqi-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p> 下载路径：</p><blockquote><p>Windows64位：<br><a href="http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-Windows-x86_64.exe">http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-Windows-x86_64.exe</a></p></blockquote><blockquote><p>Windows32位：<br><a href="http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-Windows-x86.exe">http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-Windows-x86.exe</a></p></blockquote><blockquote><p>MacOS：<br><a href="http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-MacOSX-x86_64.pkg">http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-MacOSX-x86_64.pkg</a></p></blockquote><blockquote><p>Linux64位：<br><a href="http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-Linux-x86_64.sh">http://xiaoxiangxueyuan.oss-cn-qingdao.aliyuncs.com/anaconda/Anaconda3-5.1.0-Linux-x86_64.sh</a></p></blockquote><blockquote><p>其他工具:<br>Python下载页：<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p><p>pycharm IDE：<a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a></p><p>Editor: Atom <a href="https://atom.io/">https://atom.io/</a></p></blockquote><h2 id="2-基础使用和命令"><a href="#2-基础使用和命令" class="headerlink" title="2. 基础使用和命令"></a>2. 基础使用和命令</h2><h3 id="2-1-安装完成之后的主要应用程序："><a href="#2-1-安装完成之后的主要应用程序：" class="headerlink" title="2.1 安装完成之后的主要应用程序："></a>2.1 安装完成之后的主要应用程序：</h3><blockquote><p>Anaconda Navigator：用于管理环境和包的 GUI</p><p>Anaconda Prompt 终端：管理环境和包的命令行工具</p></blockquote><h3 id="2-2-一些命令："><a href="#2-2-一些命令：" class="headerlink" title="2.2 一些命令："></a>2.2 一些命令：</h3><pre class="line-numbers language-none"><code class="language-none">conda list           //可以看到随Anaconda安装的包及其版本。conda upgrade --all  //对包进行更新：conda install numpy[,pandas]  //使用conda安装numpy或者多个包一起安装conda install numpy=1.10      //指定安装某个特定版本的包conda remove numpy   //删除指定的包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Anaconda的虚拟环境"><a href="#3-Anaconda的虚拟环境" class="headerlink" title="3. Anaconda的虚拟环境"></a>3. Anaconda的虚拟环境</h2><h3 id="3-1-Anaconda可以通过虚拟环境来隔离不同项目对于包版本的不同需求。"><a href="#3-1-Anaconda可以通过虚拟环境来隔离不同项目对于包版本的不同需求。" class="headerlink" title="3.1 Anaconda可以通过虚拟环境来隔离不同项目对于包版本的不同需求。"></a>3.1 Anaconda可以通过虚拟环境来隔离不同项目对于包版本的不同需求。</h3><blockquote><pre class="line-numbers language-none"><code class="language-none">#创建：conda create -n env1 numpy  //创建了一个名为env1的虚拟环境并安装numpyconda create -n env1 python=3  //创建了一个使用Python3的名为env1的虚拟环境 #展示：conda env list    //列出当前机器上已经创建的虚拟环境#进入：（mac/linux） source activate env_name    //进入名为env_name的虚拟环境中（windos）    activate env_name           //进入名为env_name的虚拟环境中#离开：（mac/linux） source deactivate    //离开当前的虚拟环境（windos）    deactivate           //离开当前的虚拟环境#删除：conda env remove -n env_name      //删除名为env_name的虚拟环境<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="3-2-Jupyter-notebook-解析流程"><a href="#3-2-Jupyter-notebook-解析流程" class="headerlink" title="3.2  Jupyter notebook 解析流程"></a>3.2  Jupyter notebook 解析流程</h3><p><a href="http://www.chinahadoop.cn/files/course/2018/05-23/17240990c4ec007646.png">http://www.chinahadoop.cn/files/course/2018/05-23/17240990c4ec007646.png</a></p><h2 id="4-Jupyter-notebook-快捷键"><a href="#4-Jupyter-notebook-快捷键" class="headerlink" title="4. Jupyter notebook 快捷键"></a>4. Jupyter notebook 快捷键</h2><blockquote><p>Jupyter有两种模式：<br>按Esc切换到命令模式，单元格的边框是蓝色的。这个模式下的常用快捷键（Shift-Enter可能是我们最常用的命令）：</p></blockquote><h3 id="4-1-按Esc切换到命令模式，单元格的边框是蓝色的。"><a href="#4-1-按Esc切换到命令模式，单元格的边框是蓝色的。" class="headerlink" title="4.1 按Esc切换到命令模式，单元格的边框是蓝色的。"></a>4.1 按Esc切换到命令模式，单元格的边框是蓝色的。</h3><pre class="line-numbers language-none"><code class="language-none">Enter : 转入编辑模式Shift-Enter : 运行本单元，选中下个单元Ctrl-Enter : 运行本单元Alt-Enter : 运行本单元，在其下插入新单元Y : 单元转入代码状态M :单元转入markdown状态R : 单元转入raw状态1 : 设定 1 级标题2 : 设定 2 级标题3 : 设定 3 级标题4 : 设定 4 级标题5 : 设定 5 级标题6 : 设定 6 级标题Up : 选中上方单元K : 选中上方单元Down : 选中下方单元J : 选中下方单元Shift-K : 扩大选中上方单元Shift-J : 扩大选中下方单元A : 在上方插入新单元B : 在下方插入新单元X : 剪切选中的单元C : 复制选中的单元Shift-V : 粘贴到上方单元V : 粘贴到下方单元Z : 恢复删除的最后一个单元D,D : 删除选中的单元Shift-M : 合并选中的单元Ctrl-S : 文件存盘S : 文件存盘L : 转换行号O : 转换输出Shift-O : 转换输出滚动Esc : 关闭页面Q : 关闭页面H : 显示快捷键帮助I,I : 中断Notebook内核0,0 : 重启Notebook内核Shift : 忽略Shift-Space : 向上滚动Space : 向下滚动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-编辑模式按-Enter-键切换，这模式下单元格颜色是绿的"><a href="#4-2-编辑模式按-Enter-键切换，这模式下单元格颜色是绿的" class="headerlink" title="4.2 编辑模式按 Enter 键切换，这模式下单元格颜色是绿的"></a>4.2 编辑模式按 Enter 键切换，这模式下单元格颜色是绿的</h3><pre class="line-numbers language-none"><code class="language-none">Tab : 代码补全或缩进Shift-Tab : 提示Ctrl-] : 缩进Ctrl-[ : 解除缩进Ctrl-A : 全选Ctrl-Z : 复原Ctrl-Shift-Z : 再做Ctrl-Y : 再做Ctrl-Home : 跳到单元开头Ctrl-Up : 跳到单元开头Ctrl-End : 跳到单元末尾Ctrl-Down : 跳到单元末尾Ctrl-Left : 跳到左边一个字首Ctrl-Right : 跳到右边一个字首Ctrl-Backspace : 删除前面一个字Ctrl-Delete : 删除后面一个字Esc : 进入命令模式Ctrl-M : 进入命令模式Shift-Enter : 运行本单元，选中下一单元Ctrl-Enter : 运行本单元Alt-Enter : 运行本单元，在下面插入一单元Ctrl-Shift-- : 分割单元Ctrl-Shift-Subtract : 分割单元Ctrl-S : 文件存盘Shift : 忽略Up : 光标上移或转入上一单元Down :光标下移或转入下一单元<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-Magic-关键字"><a href="#5-Magic-关键字" class="headerlink" title="5. Magic 关键字"></a>5. Magic 关键字</h2><h3 id="5-1-使用规则"><a href="#5-1-使用规则" class="headerlink" title="5.1 使用规则"></a>5.1 使用规则</h3><blockquote><p>Magic 命令的前面带有一个或两个百分号：</p></blockquote><pre class="line-numbers language-none"><code class="language-none">%&lt;Magic&gt;     =   行 Magic 命令      =  仅应用于编写 Magic 命令时所在的行。%%&lt;Magic&gt;    =   单元格 Magic 命令   =  应用于整个单元格。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-2-notebook中嵌入可视化统计图"><a href="#5-2-notebook中嵌入可视化统计图" class="headerlink" title="5.2 notebook中嵌入可视化统计图"></a>5.2 notebook中嵌入可视化统计图</h3><p>%matplotlib 将 matplotlib 设置为以交互方式（另开一个窗口绘图）工作<br>%matplotlib inline 将设置为内联方式</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker环境搭建windos的坑</title>
      <link href="2019/01/10/docker-huan-jing-da-jian-tong-yi-kai-fa-huan-jing-windos-de-keng/"/>
      <url>2019/01/10/docker-huan-jing-da-jian-tong-yi-kai-fa-huan-jing-windos-de-keng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在公司统一开发环境的情况下,在搭建docker时候遇见了，系统的坑。<br>为了以后节约时间。将踩过的坑，整理成说明文件。方便后面能够顺利并快速的度过。</p></blockquote><h2 id="1-windos系统盘"><a href="#1-windos系统盘" class="headerlink" title="1.windos系统盘"></a><strong>1.windos系统盘</strong></h2><pre class="line-numbers language-none"><code class="language-none">网上的系统盘ghos镜像主要是家庭或者教育版本改成的企业版，专业版或者是阉割过的。所以必须最好使用专业版（企业版使用了很多你用不到的，过多）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-1鉴别系统"><a href="#1-1鉴别系统" class="headerlink" title="1.1鉴别系统"></a><strong>1.1鉴别系统</strong></h3><p><strong>1.1.1 系统是否支持虚拟化</strong></p><blockquote><p>1.ctrl+alt+del 进入任务管理系统</p></blockquote><blockquote><p>2.性能-》CPU 右下角看下是否虚拟化开启。没有开启去bios设置</p></blockquote><p><strong>1.1.2 系统版本是否能安装Hyper-v</strong></p><blockquote><p>这步其实选择于你是否使用系统自带的虚拟机，属于win10版本鉴定的专属（因为win7没有）</p></blockquote><blockquote><p>1.如果你选择win7 那么先安装docker tool 再安装 docker for window ，注意版本的对照</p></blockquote><blockquote><p>2.我懒人一个，直接win10，顺便鉴定系统是否专业版本。</p></blockquote><h3 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a><strong>1.2 安装</strong></h3><pre class="line-numbers language-none"><code class="language-none">1.如果你使用了window的虚拟机 记得勾选安装包的第二个选项 使用window的容器2.如果你使用自己的虚拟机就不要勾选第二个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下的brew</title>
      <link href="2017/11/29/windows-xia-de-brew/"/>
      <url>2017/11/29/windows-xia-de-brew/</url>
      
        <content type="html"><![CDATA[<blockquote><p>回到四川，又开始用windows罗，不是很习惯，习惯性的逛开源社区发现一个好东西，就是chocolatey</p></blockquote><blockquote><p>如果使用过Linux的话，一定会被其简洁的软件包管理系统所折服。在Linux世界中，安装一个软件不需要在浏览器中寻找软件的官网，然后将其下载下来，然后双击进行安装。只需要一条简单的命令，就可以完成搜索、安装、更新、卸载等所有操作。例如Debian和Ubuntu中的apt-get命令，Fedora的yum以及新的dnf命令，还有Arch中的pacman。</p></blockquote><p>官网：<a href="https://chocolatey.org/">https://chocolatey.org/</a></p><p>#1.安装<br>官网文档：<a href="https://chocolatey.org/install">https://chocolatey.org/install</a><br>1.以管理员的模式运行cmd <code>或者</code>  运行PowerShell</p><pre class="line-numbers language-none"><code class="language-none">cmd:@"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"PowerShell:Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#2.检查</p><pre class="line-numbers language-none"><code class="language-none">尝试命令 choco 或者 choco -? 是否成功 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#3.一些玩法<br>参考文档<br>chocolatey配置玩法：<br><a href="https://chocolatey.org/docs/commands-config">https://chocolatey.org/docs/commands-config</a></p><p>3.1改变本地安装位置：</p><pre class="line-numbers language-none"><code class="language-none">choco config set cacheLocation c:\temp\choco<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p>3.2安装软件（）：<br>chocolatey安装玩法：<br><a href="https://chocolatey.org/docs/commands-install">https://chocolatey.org/docs/commands-install</a></p><pre class="line-numbers language-none"><code class="language-none">choco install sysinternalschoco install notepadplusplus googlechrome atom 7zipchoco install notepadplusplus --force --force-dependencieschoco install notepadplusplus googlechrome atom 7zip -dvfychoco install git --params="'/GitAndUnixToolsOnPath /NoAutoCrlf'" -ychoco install nodejs.install --version 0.10.35choco install git -s "'https://somewhere/out/there'"choco install git -s "'https://somewhere/protected'" -u user -p pass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>更多玩法请参考文档哦，个人觉得吧，确实不错的东西，但是我更喜欢区ubuntu玩。希望能给各位提供帮助。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
          <category> Chocolatey </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> Chocolatey </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab的安装</title>
      <link href="2017/11/22/ubuntu16-04-gitlab-bu-shi-yong-bang-ding-de-nginx/"/>
      <url>2017/11/22/ubuntu16-04-gitlab-bu-shi-yong-bang-ding-de-nginx/</url>
      
        <content type="html"><![CDATA[<blockquote><p>构建使用4天时间,主要是卡在了,nginx.最开始的方案是共存.然后在做了,这个使用自身的nginx.网上资料太少,官方文档也主要针对centos,故而花了时间来做一篇ubuntu的.较为舒适的还是使用共存的方案,只需要改下配置即可.但是共存太粗暴.所以还是用nginx负载均衡的玩法做了出来.希望能给需要的人提供一点帮助.</p></blockquote><h1 id="1-gitlab的安装"><a href="#1-gitlab的安装" class="headerlink" title="1. gitlab的安装"></a>1. gitlab的安装</h1><blockquote><p>参考:<a href="https://about.gitlab.com/installation/#ubuntu">官方文档</a></p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> upgrade<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">curl</span> openssh-server ca-certificates postfix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>发送邮件选择 ‘Internet Site’</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> gitlab-ctl reconfigure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>现在 可以直接使用了</p><h1 id="2-gitlab的配置"><a href="#2-gitlab的配置" class="headerlink" title="2. gitlab的配置"></a>2. gitlab的配置</h1><h2 id="2-1-gitlab版本号的查看"><a href="#2-1-gitlab版本号的查看" class="headerlink" title="2.1 gitlab版本号的查看"></a>2.1 gitlab版本号的查看</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">cat</span> /opt/gitlab/embedded/service/gitlab-rails/VERSION<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-2-gitlab的ssh端口修改"><a href="#2-2-gitlab的ssh端口修改" class="headerlink" title="2.2  gitlab的ssh端口修改"></a>2.2  gitlab的ssh端口修改</h2><h3 id="2-2-1-打开配置文件"><a href="#2-2-1-打开配置文件" class="headerlink" title="2.2.1 打开配置文件"></a>2.2.1 打开配置文件</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/gitlab/gitlab.rb <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改你的端口</p><pre class="line-numbers language-none"><code class="language-none">gitlab_rails['gitlab_shell_ssh_port']=2000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意:需要与下面ssh配置文件中port一致,如果你没有修改ssh默认端口,那么端口修改可以跳过</p><pre class="line-numbers language-none"><code class="language-none">sudo vim /etc/ssh/sshd_config <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-2-使用命令重新生成配置"><a href="#2-2-2-使用命令重新生成配置" class="headerlink" title="2.2.2 使用命令重新生成配置"></a>2.2.2 使用命令重新生成配置</h3><pre class="line-numbers language-none"><code class="language-none">sudo gitlab-ctl reconfigure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-3-https化"><a href="#2-3-https化" class="headerlink" title="2.3 https化"></a>2.3 https化</h2><h3 id="2-3-1-上传证书或者使用自己创建的-具体创建的看我另一篇文章"><a href="#2-3-1-上传证书或者使用自己创建的-具体创建的看我另一篇文章" class="headerlink" title="2.3.1 上传证书或者使用自己创建的(具体创建的看我另一篇文章)"></a>2.3.1 上传证书或者使用自己创建的(具体创建的看我另一篇文章)</h3><pre class="line-numbers language-none"><code class="language-none">vim /etc/gitlab/gitlab.rb <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改下面配置</p><pre class="line-numbers language-none"><code class="language-none">external_url 'https://mypzh.com'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="3-不使用绑定的nginx"><a href="#3-不使用绑定的nginx" class="headerlink" title="3. 不使用绑定的nginx"></a>3. 不使用绑定的nginx</h1><h2 id="3-1-gitlab配置做修改"><a href="#3-1-gitlab配置做修改" class="headerlink" title="3.1 gitlab配置做修改"></a>3.1 gitlab配置做修改</h2><pre class="line-numbers language-none"><code class="language-none">vim /etc/gitlab/gitlab.rb <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改下面配置</p><pre class="line-numbers language-none"><code class="language-none">nginx['enable'] = falseweb_server['external_users'] = ['www-data']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>版本8以前的不适用</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">upstream gitlab-workhorse <span class="token punctuation">{</span>  server unix:/var/opt/gitlab/gitlab-workhorse/socket <span class="token assign-left variable">fail_timeout</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>server <span class="token punctuation">{</span>  listen <span class="token number">0.0</span>.0.0:80<span class="token punctuation">;</span>  listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80 <span class="token assign-left variable">ipv6only</span><span class="token operator">=</span>on default_server<span class="token punctuation">;</span>  server_name mypzh.com<span class="token punctuation">;</span>  <span class="token comment">#修改成你的地址</span>  server_tokens off<span class="token punctuation">;</span>   <span class="token builtin class-name">return</span> <span class="token number">301</span> https://<span class="token variable">$http_host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>  access_log  /var/log/nginx/gitlab_access.log<span class="token punctuation">;</span>  error_log   /var/log/nginx/gitlab_error.log<span class="token punctuation">;</span><span class="token punctuation">}</span>server <span class="token punctuation">{</span>  listen <span class="token number">0.0</span>.0.0:443 ssl<span class="token punctuation">;</span>  listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:443 <span class="token assign-left variable">ipv6only</span><span class="token operator">=</span>on ssl default_server<span class="token punctuation">;</span>  server_name mypzh.com<span class="token punctuation">;</span> <span class="token comment">#修改成你的地址</span>  root /opt/gitlab/embedded/service/gitlab-rails/public<span class="token punctuation">;</span>  ssl on<span class="token punctuation">;</span>  ssl_certificate /etc/nginx/cert/mypzh.com.pem<span class="token punctuation">;</span><span class="token comment">#我放的是阿里云生成的</span>  ssl_certificate_key /etc/nginx/cert/mypzh.com.key<span class="token punctuation">;</span><span class="token comment">#我放的是阿里云生成的</span>  ssl_ciphers <span class="token string">"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"</span><span class="token punctuation">;</span>  ssl_protocols TLSv1 TLSv1.1 TLSv1.2<span class="token punctuation">;</span>  ssl_prefer_server_ciphers on<span class="token punctuation">;</span>  ssl_session_cache shared:SSL:10m<span class="token punctuation">;</span>  ssl_session_timeout 5m<span class="token punctuation">;</span>  access_log  /var/log/nginx/gitlab_access.log<span class="token punctuation">;</span>  error_log   /var/log/nginx/gitlab_error.log<span class="token punctuation">;</span>  location / <span class="token punctuation">{</span>    client_max_body_size <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token function">gzip</span> off<span class="token punctuation">;</span>    proxy_read_timeout      <span class="token number">300</span><span class="token punctuation">;</span>    proxy_connect_timeout   <span class="token number">300</span><span class="token punctuation">;</span>    proxy_redirect          off<span class="token punctuation">;</span>    proxy_http_version <span class="token number">1.1</span><span class="token punctuation">;</span>    proxy_set_header    Host                <span class="token variable">$http_host</span><span class="token punctuation">;</span>    proxy_set_header    X-Real-IP           <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>    proxy_set_header    X-Forwarded-Ssl     on<span class="token punctuation">;</span>    proxy_set_header    X-Forwarded-For     <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>    proxy_set_header    X-Forwarded-Proto   <span class="token variable">$scheme</span><span class="token punctuation">;</span>    proxy_pass http://gitlab-workhorse<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-其他的问题"><a href="#4-其他的问题" class="headerlink" title="4.其他的问题"></a>4.其他的问题</h1><h2 id="4-1-配置修改ssh端口号"><a href="#4-1-配置修改ssh端口号" class="headerlink" title="4.1 配置修改ssh端口号:"></a>4.1 配置修改ssh端口号:</h2><pre class="line-numbers language-none"><code class="language-none">gitlab_rails['gitlab_shell_ssh_port'] = 2000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
          <category> gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql导入timestamp数据时报错</title>
      <link href="2017/09/11/sql-dao-ru-timestamp-shu-ju-shi-bao-cuo/"/>
      <url>2017/09/11/sql-dao-ru-timestamp-shu-ju-shi-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>原理分析：</p><ol><li>5.7开始不允许拿到NULL和拿到’0000-00-00 00:00:00’，都是视作空值处理的。</li></ol><p><a href="http://stackoverflow.com/questions/9192027/invalid-default-value-for-create-date-timestamp-field">参考传门</a></p><blockquote><p>==下面方法测试可以用==</p></blockquote><pre class="line-numbers language-none"><code class="language-none">1.在新增记录时能自动设置update_time字段为当前时间设置DEFAULT CURRENT_TIMESTAMP:`update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,2.在更新记录时还能自动更新update_time字段为当前时间:`update_time` timestamp NOT NULL ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>==备选方案==</p></blockquote><pre class="line-numbers language-none"><code class="language-none">mysql5.7默认为sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES改为sql_mode=NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度鹰眼轨迹V3之初探</title>
      <link href="2017/07/28/bai-du-di-tu-zhi-ying-yan-gui-ji-v3-zhi-chu-tan/"/>
      <url>2017/07/28/bai-du-di-tu-zhi-ying-yan-gui-ji-v3-zhi-chu-tan/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>最近项目中在使用这个，我也才开始接触这个，所有算是一个分享吧，网上V3的资料又少的可怜，我使用的是MAC，所有以mac为平台来记录。其他环境 我会给予链接地址，方便传送，废话不多说，开始干</p></blockquote><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1.环境搭建"></a>1.环境搭建</h1><h2 id="1-1-下载原生的demo"><a href="#1-1-下载原生的demo" class="headerlink" title="1.1 下载原生的demo"></a>1.1 下载原生的demo</h2><p>传送门中其实步骤很详细了，但是为了方便自己，也方便他人，我就简单不一一介绍直接步骤加命令的方式</p><p><a href="https://github.com/baidu-openmap-trace/web-demo-v3/">传送门</a></p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/baidu-openmap-trace/web-demo-v3.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-2-安装nodejs"><a href="#1-2-安装nodejs" class="headerlink" title="1.2 安装nodejs"></a>1.2 安装nodejs</h2><p><a href="https://nodejs.org/en/download/">其他环境参考传送门</a></p><pre class="line-numbers language-none"><code class="language-none">brew install nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-3安装fis3"><a href="#1-3安装fis3" class="headerlink" title="1.3安装fis3"></a>1.3安装fis3</h2><p><a href="http://fis.baidu.com/">fis3资料参考</a></p><pre class="line-numbers language-none"><code class="language-none">npm install -g fis3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-4-安装依赖包"><a href="#1-4-安装依赖包" class="headerlink" title="1.4 安装依赖包"></a>1.4 安装依赖包</h2><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-5-前期配置"><a href="#1-5-前期配置" class="headerlink" title="1.5 前期配置"></a>1.5 前期配置</h2><blockquote><p><code>准备工作</code>：<br>1.service_id<br>2.申请2个AK</p><p> 我会以<code>AK1</code>和<code>AK2</code> 字段标识出来<br> AK 1作为JSAPI使用，只能放在页面前端，会暴露给系统用户<br> AK 2作为鹰眼和地址解析使用，最好能够藏在您的服务端，防止泄露。</p></blockquote><h3 id="1-5-1-首页配置"><a href="#1-5-1-首页配置" class="headerlink" title="1.5.1 首页配置"></a>1.5.1 首页配置</h3><p>在根目录中打开<code>manager.html</code>文件，24行处加入你的AK1,如下</p><pre class="line-numbers language-none"><code class="language-none">&lt;script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&amp;ak=您的AK1&amp;callback=mapControl.initMap"&gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-5-2-fis3编译"><a href="#1-5-2-fis3编译" class="headerlink" title="1.5.2 fis3编译"></a>1.5.2 fis3编译</h3><p>根目录下</p><pre class="line-numbers language-none"><code class="language-none">fis3 release demofis3 server start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>可以使用</p></blockquote><pre class="line-numbers language-none"><code class="language-none">fis3 release demo -wl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样代码更新保存之后，FIS3会自动编译，并刷新浏览器查看最新效果<br>如果需要做配置修改,使用以下这个文件</p><blockquote><p>fis-config.js</p></blockquote><h2 id="1-6成功，预览下吧"><a href="#1-6成功，预览下吧" class="headerlink" title="1.6成功，预览下吧"></a>1.6成功，预览下吧</h2><p>完成上面后，一般以下地址 可以直接出来一张地图了</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1:8080/manager.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置上自己的参数也能看到自己的数据了</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1:8080/manager.html?service_id='service_id'&amp;ak='AK2'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>官方的建议是将参数隐藏在后端 所有 下面账号配置</p><h2 id="1-7账号配置"><a href="#1-7账号配置" class="headerlink" title="1.7账号配置"></a>1.7账号配置</h2><p>根目录下，修改以下文件，的所在之处，</p><pre class="line-numbers language-none"><code class="language-none">script/common/urls.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3ewaDIwZ-1607496038545)(<a href="https://raw.githubusercontent.com/baidu-openmap-trace/web-demo-v3/master/readmeImages/ak.png)]">https://raw.githubusercontent.com/baidu-openmap-trace/web-demo-v3/master/readmeImages/ak.png)]</a></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="1-文档结构"><a href="#1-文档结构" class="headerlink" title="1.文档结构"></a>1.文档结构</h2><blockquote><p>component ———————————- 依赖库，一般不用修改<br>node_modules ——————————- 依赖库，一般不用修改，需要运行npm install自动安装<br>script ————————————- 核心逻辑部分</p><blockquote><p>common ———————————— 全局公共方法</p><blockquote><p>commonfun.js —————————– 全局公共方法<br>mapControl.js —————————- 地图初始化和操作逻辑<br>urls.js ———————————- 所有鹰眼相关数据请求配置</p></blockquote></blockquote><blockquote><p>modules ———————————– 功能模块</p></blockquote><blockquote><blockquote><p>common ———————————– 公共模块，包括顶栏等<br>entitycontrol —————————- 终端管理模块<br>trackcontrol —————————- 轨迹监控模块</p></blockquote></blockquote><p>static ————————————- 样式、图片和第三方库<br>componet.json —————————— fis3 安装包配置文件<br>fis-conf.js ——————————– fis3编译配置文件<br>manager.html ——————————- 系统入口HTML文件<br>package.json ——————————- npm 配置文件<br>README.md ———————————- 说明文档 项目中建议删除<br>readmeImages ——————————- 说明文档中用到的图片 项目指令建议删除</p></blockquote><pre class="line-numbers language-none"><code class="language-none">1.修改样式，那么修改./static/css/common.css文件应该就可以满足需求了。2.内部逻辑进行修改需要修改./script/modules/下对应的路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">modules路径下的三个文件夹中的结构相似。以entitycontrol为例说明，结构为<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>entitycontrol —————————— 终端管理模块</p><blockquote><p>actions ———————————– reflux actions</p><blockquote><p>entityAction.js ————————– 所有终端管理中的actions列表</p></blockquote></blockquote><blockquote><p>stores ———————————— reflux stores</p><blockquote><p>entityStores.js ————————– 终端管理中的数据请求，处理</p></blockquote></blockquote><blockquote><p>views ————————————- reflux views</p><blockquote><p>bottomcontrol.js ————————- 数据表下方控件<br>control.js ——————————- 数据表上方控件<br>entitycontrol.js ————————- 终端管理总view<br>entitylist.js —————————- 终端列表<br>page.js ———————————- 页码控件<br>remove.js ——————————– 删除控件<br>search.js ——————————– 检索控件<br>selectall.js —————————– 全选控件</p></blockquote></blockquote></blockquote><p>利用Reflux将entitycontrol模块分为了三部分：views，actions，stores。</p><h2 id="2-API接口说明"><a href="#2-API接口说明" class="headerlink" title="2.API接口说明"></a>2.API接口说明</h2><pre class="line-numbers language-none"><code class="language-none">1.涉及数据查看的基本上是GET，2.涉及到增删改敏感操作的基本上POST,3.因为浏览器前端存在跨域的限制，不能直接用AJAX请求数据。所以DEMO对于所有的GET请求都使用了JSONP的方案进行实现。4.终端管理中的删除终端、编辑自定义字段两个功能，使用的是POST，因此没有进行实现,开发者如果对这两个接口有需求的话，需要自己编写一个和DEMO同域的代理服务，转发DEMO的POST请求到鹰眼Web API服务5.强烈推荐:将所有的请求（包括GET）都走自己的代理服务器，这样就能将自己的service_id和AK 2隐藏起来了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-官方建议需要了解的东西"><a href="#3-官方建议需要了解的东西" class="headerlink" title="3.官方建议需要了解的东西"></a>3.官方建议需要了解的东西</h2><table><thead><tr><th align="center">序号</th><th align="center">名称</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><a href="http://lbsyun.baidu.com/index.php?title=yingyan/api/all">鹰眼Web 服务 API</a></td><td align="center">数据获取</td></tr><tr><td align="center">2</td><td align="center"><a href="http://lbsyun.baidu.com/index.php?title=jspopular">百度地图JSAPI</a></td><td align="center">地图展示等</td></tr><tr><td align="center">3</td><td align="center"><a href="http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-geocoding">百度地图Geocoding API</a></td><td align="center">逆地址解析（经纬度到地址）</td></tr><tr><td align="center">4</td><td align="center"><a href="http://mapv.baidu.com/">百度地图MapV</a></td><td align="center">大数据展示</td></tr><tr><td align="center">5</td><td align="center"><a href="https://github.com/huiyan-fe/CanvasLayer">百度地图CanvasLayer</a></td><td align="center">轨迹绘制</td></tr><tr><td align="center">6</td><td align="center"><a href="http://fis.baidu.com/">FIS3</a></td><td align="center">编译集成工具，发布管理</td></tr><tr><td align="center">7</td><td align="center"><a href="https://github.com/fex-team/mod">modJS</a></td><td align="center">代码模块化</td></tr></tbody></table><blockquote><p>使用的一些第三方的东西<br>|序号|名称|用途|<br>|:-:|:-:|:-:|<br>|1|<a href="http://jquery.com/">Jquery</a>|DOM操作|<br>|2|<a href="http://v2.bootcss.com/">Bootstrap</a>|CSS样式|<br>|3|<a href="https://github.com/smalot/bootstrap-datetimepicker">Bootstrap-datetimepicker</a>|日期选择插件|<br>|4|<a href="http://necolas.github.io/normalize.css/">normalize.css</a>|CSS样式初始化|<br>|5|<a href="https://daneden.github.io/animate.css/">animate.css</a>|CSS3 动画|<br>|6|<a href="https://github.com/fronteed/icheck">icheck</a>|checkbox 样式|<br>|7|<a href="https://github.com/facebook/react">React</a>|DOM 组织|<br>|8|<a href="https://github.com/reflux/refluxjs">RefluxJS</a>|代码组织架构|<br>|9|<a href="https://github.com/babel/babel">babel</a>|ES6代码编译|<br>|10|<a href="https://www.npmjs.com/">npm</a>|包管理|</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 地图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis的入门</title>
      <link href="2017/04/01/redis-1/"/>
      <url>2017/04/01/redis-1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-redis安装、配置和启动"><a href="#1-redis安装、配置和启动" class="headerlink" title="1.redis安装、配置和启动"></a>1.redis安装、配置和启动</h1><h2 id="mac-brew-安装"><a href="#mac-brew-安装" class="headerlink" title="mac brew 安装"></a>mac brew 安装</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">brew install redis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装目录"><a href="#安装目录" class="headerlink" title="安装目录"></a>安装目录</h3><blockquote><p>/usr/local/Cellar/redis/</p></blockquote><hr><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">which redis-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>/usr/local/bin/redis-server<br>//从/usr/local/Cellar/redis/3.2.8/bin/redis-server外链过来</p></blockquote><h4 id="server配置文件"><a href="#server配置文件" class="headerlink" title="server配置文件"></a>server配置文件</h4><blockquote><p>/usr/local/etc/redis.conf</p></blockquote><hr><h4 id="配置项说明"><a href="#配置项说明" class="headerlink" title="配置项说明"></a>配置项说明</h4><blockquote><p>daemonize  yes  //前台启动 server 还是后台启动 server，一般选择后台启动<br>port 7200  //多实例和安全问题,需要对端口号进行修改默认是6379</p></blockquote><h4 id="启动并加载配置"><a href="#启动并加载配置" class="headerlink" title="启动并加载配置"></a>启动并加载配置</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo /usr/local/Cellar/redis/3.2.8/bin/redis-server /usr/local/etc/redis.conf <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查询是否启动"><a href="#查询是否启动" class="headerlink" title="查询是否启动"></a>查询是否启动</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps aux|grep redis-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">which redis-cli <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>/usr/local/bin/redis-cli<br>从/usr/local/Cellar/redis/3.2.8/bin/redis-cli外链过来</p></blockquote><h4 id="启动客户端"><a href="#启动客户端" class="headerlink" title="启动客户端"></a>启动客户端</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">redis-cli --help //根据帮助使用以下命令连接服务器（原端口号已经修改过的）redis-cli -h 127.0.0.1 -p 7200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="查询redis信息和状态"><a href="#查询redis信息和状态" class="headerlink" title="查询redis信息和状态"></a>查询redis信息和状态</h4><p>连接成功后使用 info</p><h4 id="测试redis-server是否启动"><a href="#测试redis-server是否启动" class="headerlink" title="测试redis server是否启动"></a>测试redis server是否启动</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">➜  bin git:(master) ✗ redis-cli ping                Could not connect to Redis at 127.0.0.1:6379: Connection refused➜  bin git:(master) ✗ redis-cli -h 127.0.0.1 -p 7200 pingPONG<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-Redis数据类型"><a href="#2-Redis数据类型" class="headerlink" title="2.Redis数据类型"></a>2.Redis数据类型</h1><h2 id="五种数据类型"><a href="#五种数据类型" class="headerlink" title="五种数据类型"></a>五种数据类型</h2><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><blockquote><p>存储的值</p></blockquote><p>可以是字符串、整数或者浮点。统称为元素</p><blockquote><p>读写能力</p></blockquote><p>对字符串操作对整数类型的加减</p><h4 id="set-和-get-操作"><a href="#set-和-get-操作" class="headerlink" title="set 和 get 操作"></a>set 和 get 操作</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; set string1 muyongOK127.0.0.1:7200&gt; get string1"muyong"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="整型的自增操作和减操作"><a href="#整型的自增操作和减操作" class="headerlink" title="整型的自增操作和减操作"></a>整型的自增操作和减操作</h4><blockquote><p>自增命令 incr 根据自己整型自增1</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; set string2 5OK127.0.0.1:7200&gt; get string2"5"127.0.0.1:7200&gt; incr string2(integer) 6127.0.0.1:7200&gt; get string2"6"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>减命令 decrby 参数2代表减2</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; decrby string2 2(integer) 4127.0.0.1:7200&gt; get string2"4"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><blockquote><p>存储的值</p></blockquote><p>一个序列集合且每个节点都包好了一个元素</p><blockquote><p>读写能力</p></blockquote><p>序列两端推入，或弹出元素 修减、查找或移除元素</p><h4 id="push-和-pop-操作"><a href="#push-和-pop-操作" class="headerlink" title="push 和 pop 操作"></a>push 和 pop 操作</h4><blockquote><p>list 的存储像队列，头和尾，用左和右来代表 所以就有了</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; lpush list1 11(integer) 1127.0.0.1:7200&gt; lpush list1 22(integer) 2127.0.0.1:7200&gt; lpush list1 33(integer) 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>其中 l 代表 left 相对的也有 r</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; rpush list1 11(integer) 1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>push表示进，那么 pop 代表出，那么就和先进先出，后进先出的原则相匹配了，</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; lpop list1"33" //左边弹出第一个数据，返回值为33<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="获取当前列表的长度"><a href="#获取当前列表的长度" class="headerlink" title="获取当前列表的长度"></a>获取当前列表的长度</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; llen list1(integer) 2 // 当前 list1长度为2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><blockquote><p>存储的值</p></blockquote><p>各不相同的元素</p><blockquote><p>读写能力</p></blockquote><p>从集合中插入或者删除元素</p><h4 id="sadd-插入和-srem-删除元素"><a href="#sadd-插入和-srem-删除元素" class="headerlink" title="sadd 插入和 srem 删除元素"></a>sadd 插入和 srem 删除元素</h4><blockquote><p>sadd 插入</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; sadd set1 11(integer) 1 //插入成功返回值127.0.0.1:7200&gt; sadd set1 22(integer) 1127.0.0.1:7200&gt; sadd set1 33(integer) 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>srem删除</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; srem set1 33(integer) 1 //删除成功返回值127.0.0.1:7200&gt; srem set1 33(integer) 0 //删除失败返回值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="scard-判断有多少个元素"><a href="#scard-判断有多少个元素" class="headerlink" title="scard 判断有多少个元素"></a>scard 判断有多少个元素</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; scard set1(integer) 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="sismember-判断某个元素是否在set里面"><a href="#sismember-判断某个元素是否在set里面" class="headerlink" title="sismember 判断某个元素是否在set里面"></a>sismember 判断某个元素是否在set里面</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; sismember set1 33(integer) 1 //存在的返回值127.0.0.1:7200&gt; srem set1 33(integer) 1127.0.0.1:7200&gt; sismember set1 33(integer) 0 //不存在的返回值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h3><blockquote><p>存储的值</p></blockquote><p>有 key-value的散列组，其中 key 是字符串，value是元素</p><blockquote><p>读写能力</p></blockquote><p>按照 key进行增加删除</p><h4 id="HSET-插入-修改"><a href="#HSET-插入-修改" class="headerlink" title="HSET 插入/修改"></a>HSET 插入/修改</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; hset hash1 key1 12(integer) 1127.0.0.1:7200&gt; hset hash1 key2 12(integer) 1127.0.0.1:7200&gt; hset hash1 key3 12(integer) 1//修改 hash1中 key1的值127.0.0.1:7200&gt; hset hash1 key1 13(integer) 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="HGET获取值"><a href="#HGET获取值" class="headerlink" title="HGET获取值"></a>HGET获取值</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; hget hash1 key2"12"127.0.0.1:7200&gt; hget hash1 key1"13"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="HMGET-获取多个值"><a href="#HMGET-获取多个值" class="headerlink" title="HMGET 获取多个值"></a>HMGET 获取多个值</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; hmget hash1 key1 key2 key31) "13"2) "12"3) "12"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="HLEN查看HASH长度"><a href="#HLEN查看HASH长度" class="headerlink" title="HLEN查看HASH长度"></a>HLEN查看HASH长度</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; hlen hash1(integer) 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Sort-Set"><a href="#Sort-Set" class="headerlink" title="Sort Set"></a>Sort Set</h3><blockquote><p>存储的值</p></blockquote><p>带分数的score-value有序集合，其中score为浮点，value为元素</p><ul><li>存储和hash一样，都是一个映射。存储的是分数与元素的映射。可以看出是排行榜。</li></ul><p>value必须是全局唯一。</p><blockquote><p>读写能力</p></blockquote><p>集合插入，按照分数范围查找</p><h4 id="ZADD添加和修改"><a href="#ZADD添加和修改" class="headerlink" title="ZADD添加和修改"></a>ZADD添加和修改</h4><blockquote><p>添加</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; zadd z1 9.5 val1(integer) 1127.0.0.1:7200&gt; zadd z1 7.5 val2(integer) 1127.0.0.1:7200&gt; zadd z1 13 val3(integer) 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">127.0.0.1:7200&gt; zadd z1 10 val2(integer) 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="ZCARD查看元素个数"><a href="#ZCARD查看元素个数" class="headerlink" title="ZCARD查看元素个数"></a>ZCARD查看元素个数</h4><blockquote><p>范围排名</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">zrange z1 0 2 withscorres // 前三最低开始排序，并带上分数（值）。参数：withscorres.当val2和val3值相等时，那么按字母序排列（val2,val3:val一样，2比3小，所以排前面）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">redis 127.0.0.1:7200&gt; zrange z1 0 11) "val3"2) "val1"redis 127.0.0.1:7200&gt; zrange z1 0 1 withscores1) "val3"2) "2.2999999999999998"3) "val1"4) "6.0999999999999996"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>某个排名</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">redis 127.0.0.1:7200&gt; zrank z1 val3(integer) 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 缓存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC修改IP无效的地址IP6</title>
      <link href="2017/03/27/mac-ip/"/>
      <url>2017/03/27/mac-ip/</url>
      
        <content type="html"><![CDATA[<p>在mac系统下(os x 10),手动设置ip地址后，弹出错误提示</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">“无效的服务器地址 BasicIPv6ValidationError”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="解决的办法是-两种"><a href="#解决的办法是-两种" class="headerlink" title="解决的办法是(两种)"></a>解决的办法是(两种)</h1><h2 id="停掉IPV6服务"><a href="#停掉IPV6服务" class="headerlink" title="停掉IPV6服务"></a>停掉IPV6服务</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">networksetup -listallnetworkservices  //列出所有网络服务信息networksetup -setv6off "LAN"   //停止对应网卡的ipV6服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以手动解决：</p><h2 id="手动设置网卡的ip地址"><a href="#手动设置网卡的ip地址" class="headerlink" title="手动设置网卡的ip地址"></a>手动设置网卡的ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">networksetup <span class="token parameter variable">-setmanual</span> <span class="token string">"LAN 2"</span><span class="token number">192.168</span>.66.200 <span class="token number">255.255</span>.255.0 <span class="token number">192.168</span>.66.1 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IT圈装逼速成指南</title>
      <link href="2017/03/09/zhuang/"/>
      <url>2017/03/09/zhuang/</url>
      
        <content type="html"><![CDATA[<p>本文转制 Litten的博文………</p><blockquote><p>我有个朋友，春节回来了大家聚在一起，说自己买了iphone6但总觉得自己还是很low，问这是怎么回事？<br>其实生活过得怎样，跟iphone是两码事。先把生活过得充实了，切莫本末倒置。当然，我们可以就“IT圈如何愉快的装X”敞开心扉谈下这个问题。<br>以下几点仅供参考，实践时请注意预防雷劈。</p></blockquote><h1 id="1-谈资类"><a href="#1-谈资类" class="headerlink" title="1.谈资类"></a>1.谈资类</h1><ul><li><p>谈乔纳森。<br>苹果设计师乔纳森。你要往死里黑他，但一定请记住，得是爱到深处自然黑那种黑。顺手拿过iphone6当惊堂木一拍（兄弟你得狠下这个心），当小伙伴因震惊不解而望着你时，你微微一笑，缓缓叹气：“彩虹山上的渐变爵士，身上却流着极简的血液…”</p></li><li><p>谈亚马逊。<br>要坚定保持亚马逊没啥黑点的观点不动摇。当别人说到界面和UI时，你整个人都要散发出一种“亚马逊的产品很牛的所以界面什么的并不重要”的气质。</p></li><li><p>谈阿里IPO。<br>这个话题面前，谈什么都会很low。但你可以很随意的说：哈哈，现场wifi信号一定很强！<br>小伙伴们细细一品，就没人敢说话了。恰恰是这句随意的话，突显了你对整个路演格局的了然于胸！300名销售人员，主场和分场，等电梯要半小时，队伍有十八个弯…这些信息量都涵盖在这句话里了。</p></li></ul><h1 id="2-话题类"><a href="#2-话题类" class="headerlink" title="2.话题类"></a>2.话题类</h1><ul><li><p>关于APP。<br>[ˈæp] 念阿破（与爱破也比较像，参见音标），不能把三个字母拆开念成A P P。总的来说有三大注意事项：1、国内的，不玩。2、流行的，不玩。3、名声响的，不玩。</p></li><li><p>关于手机贴膜。<br>营造出一种“一个批判者的自我愤怒”的气氛，让人感觉你在贴与不贴之间，一定有一段不可言说的故事。然后表现出自己已超脱了挣扎，在自己这个level，跟大家再讨论现实问题已毫无意义。因而你只好微笑着说：“你们不觉得让屏幕随手机一起慢慢变老，是一件很浪漫的事情吗？”</p></li><li><p>关于朋友圈。<br>A：怎么很少见你发朋友圈？你：哦…国内的sns（一定要秀个英文）不太有意思，我回头把我ins帐号发你。<br>当然你的朋友圈里还是可以写些东西，参考文字：脑残粉了一回，终于遇到了Trip Hawkins，从Spore开始就已喜欢上了EA…</p></li><li><p>关于BAT。<br>不谈。</p></li></ul><h1 id="3-技巧类"><a href="#3-技巧类" class="headerlink" title="3.技巧类"></a>3.技巧类</h1><ul><li><p>欲扬先抑。<br>在赞美目标的之前，把同类产品先夸一遍。不经意间，透露出自己知识面广，却又别有追求。具体句式可参考《中国好声音》：“杨坤老师，我一直很喜欢你，但是…”</p></li><li><p>回答问题。<br>使用知乎文风，可助你吹的牛逼鹏翔万里，栩栩如生。有人会问，什么是知乎文风，难学吗？不难，记住两个词就可以了。<br>第一个词在最开头用，“谢邀”。不管有没有人邀你，这主要是营造“我不是一个人在战斗”的氛围，以及一种“我本沉默奈何盛情难却”的傲娇。<br>第二个词在最末尾用，“以上”。不管你以上的内容怎样，就这么一个词，有种老子发言结束了，你们该鼓掌的鼓掌该献花的献花的微妙情怀。</p></li></ul><p>以上。</p>]]></content>
      
      
      <categories>
          
          <category> 有趣的灵魂 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搞笑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SqlYog中文乱码的问题</title>
      <link href="2016/07/11/guan-yu-shi-yong-mysql-sqlyog-zhong-wen-luan-ma-de-wen-ti/"/>
      <url>2016/07/11/guan-yu-shi-yong-mysql-sqlyog-zhong-wen-luan-ma-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>我使用的是UTF-8以此为例：<br>库和表的默认字符集和排序规则为：<br>utf8 &amp; utf8_general_ci<br>但是SqlYog中 我不能插入中文 就算插入也会有警告 报错为<br>SQL Error: 1366: Incorrect string value:</p><p>度娘和谷歌很多方法都不可用<br>最后找到原因为<br><strong>数据库此字段的字符集与整理字符集是否与SQL语句传递数据的字符集相同；不相同则会引发MySQL1366错误。</strong><br>解决办法如下：<br><strong>show full columns from table_name;</strong><br>发现我的uname字段不是UTF-8<br>然后我在修改后的库中 将该表种这个字段重新创建了，然后中文可以正常插入并且显示</p><h2 id="补充方法："><a href="#补充方法：" class="headerlink" title="#补充方法："></a>#补充方法：</h2><p>###1.网上查到一段代码可以直接修改 已经测试过（可以使用）  留作参考</p><p>ALTER TABLE my_user CHANGE username username VARCHAR(18) CHARACTER SET utf8 COLLATE  utf8_general_ci NOT NULL DEFAULT ‘’;  </p><p>###2.最简单的一个办法<br>在SQLyog中选择 表 右键改变表右侧有一个 隐藏语言选项 取消即可 进行修改<br>鉴于网上很多错误答案，以此提供 希望对你有所帮助</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
          <category> SqlYog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> SqlYog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
